{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://demo.uat.naviplancentral.com/factfinder"
        },
        {
            "url": "http://demo.uat.naviplancentral.com/factfinder"
        }
    ],
    "info": {
        "contact": {
            "x-twitter": "AdvicentFP"
        },
        "description": "An API for accessing the Narrator Fact Finder.",
        "title": "Advicent.FactFinderService",
        "version": "v1",
        "x-apisguru-categories": [
            "financial"
        ],
        "x-logo": {
            "url": "https://api.apis.guru/v2/cache/logo/https_twitter.com_AdvicentFP_profile_image.jpeg"
        },
        "x-origin": [
            {
                "format": "swagger",
                "url": "https://demo.uat.naviplancentral.com/factfinder/swagger/docs/v1",
                "version": "2.0"
            }
        ],
        "x-preferred": true,
        "x-providerName": "naviplancentral.com",
        "x-serviceName": "factfinder"
    },
    "paths": {
        "/api/AccountTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Account Types for the specified country.<br />\r\n              Purpose: Provides access to the Account Types including id and type description.",
                "operationId": "AccountTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Account Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accountTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "accountTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Account Type not found."
                    }
                },
                "tags": [
                    "AccountTypes"
                ]
            }
        },
        "/api/AccountTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Account Types for the specified id.<br />\r\n              Purpose: Provides access to the Account Types including id and type description.",
                "operationId": "AccountTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Account Type used to retreive the Account Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Account Type not found."
                    }
                },
                "tags": [
                    "AccountTypes"
                ]
            }
        },
        "/api/Accounts": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Accounts for the specified Fact Finder ID and/or external source ID.<br />\r\n              Purpose: Provides access to the Account information including description and market value.",
                "operationId": "Accounts_GetAccountsByFactFinderIdByFactfinderidExternalsourceid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Accounts",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The external ID used to filter Accounts",
                        "in": "query",
                        "name": "externalSourceId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accounts": {
                                            "items": {
                                                "properties": {
                                                    "accountId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "accountType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceName": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastUpdated": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint",
                                                            "FamilyMember",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ownerDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "accounts": {
                                            "items": {
                                                "properties": {
                                                    "accountId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "accountType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceName": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastUpdated": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint",
                                                            "FamilyMember",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ownerDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Account."
                    },
                    "403": {
                        "description": "Request is restricted for access to Account."
                    },
                    "404": {
                        "description": "Account not found."
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates an Account.<br />\r\n              Purpose: Allows for creation of Accounts on a Fact Finder.",
                "operationId": "Accounts_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accountId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "accountType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "FamilyMember",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "ownerDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "accountId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "accountType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "FamilyMember",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "ownerDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Account."
                    },
                    "403": {
                        "description": "Request is restricted for access to Account."
                    },
                    "404": {
                        "description": "Account not found."
                    }
                },
                "tags": [
                    "Accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "accountType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceName": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "holdings": {
                                        "items": {
                                            "properties": {
                                                "costBasis": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "cusip": {
                                                    "maxLength": 31,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "marketValue": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "symbol": {
                                                    "maxLength": 31,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "valuationDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "description"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "lastUpdated": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint",
                                            "FamilyMember",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "ownerDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "accountType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceName": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "holdings": {
                                        "items": {
                                            "properties": {
                                                "costBasis": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "cusip": {
                                                    "maxLength": 31,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "marketValue": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "symbol": {
                                                    "maxLength": 31,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "valuationDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "description"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "lastUpdated": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint",
                                            "FamilyMember",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "ownerDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Account to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Accounts/{accountId}/Holdings/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Account Holding for the specified Account Holding ID and Account ID.<br />\r\n              Purpose: Provides access to the Account Holding information including description and market value.",
                "operationId": "Accounts_GetAccountHoldingByAccountidId",
                "parameters": [
                    {
                        "description": "The ID of the Account used to retreive the Account Holding data",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The ID of the Account Holding used to retreive the Account Holding data",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accountHoldingId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "accountId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "costBasis": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "cusip": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "symbol": {
                                            "type": "string"
                                        },
                                        "valuationDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "accountHoldingId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "accountId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "costBasis": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "cusip": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "symbol": {
                                            "type": "string"
                                        },
                                        "valuationDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Account."
                    },
                    "403": {
                        "description": "Request is restricted for access to Account."
                    },
                    "404": {
                        "description": "Account not found."
                    }
                },
                "tags": [
                    "Accounts"
                ]
            }
        },
        "/api/Accounts/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes an Account tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Account from a Fact Finder.",
                "operationId": "Accounts_DeleteAccountById",
                "parameters": [
                    {
                        "description": "The Account ID used to identify which Account to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Account."
                    },
                    "403": {
                        "description": "Request is restricted for access to Account."
                    },
                    "404": {
                        "description": "Account not found."
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Account for the specified Account ID.<br />\r\n              Purpose: Provides access to the Account information including description and market value.",
                "operationId": "Accounts_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Account used to retreive the Account data",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accountId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "accountType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "FamilyMember",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "ownerDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "accountId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "accountType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "FamilyMember",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "ownerDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Account."
                    },
                    "403": {
                        "description": "Request is restricted for access to Account."
                    },
                    "404": {
                        "description": "Account not found."
                    }
                },
                "tags": [
                    "Accounts"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates an Account.<br />\r\n              Purpose: Allows for complete replacement of an Account on a Fact Finder.",
                "operationId": "Accounts_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Account ID used to identify which Account to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accountId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "accountType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "FamilyMember",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "ownerDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "accountId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "accountType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "FamilyMember",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "ownerDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Account."
                    },
                    "403": {
                        "description": "Request is restricted for access to Account."
                    },
                    "404": {
                        "description": "Account not found."
                    }
                },
                "tags": [
                    "Accounts"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "accountType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceName": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "holdings": {
                                        "items": {
                                            "properties": {
                                                "costBasis": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "cusip": {
                                                    "maxLength": 31,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "marketValue": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "symbol": {
                                                    "maxLength": 31,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "valuationDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "description"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "lastUpdated": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint",
                                            "FamilyMember",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "ownerDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "accountType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceName": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "holdings": {
                                        "items": {
                                            "properties": {
                                                "costBasis": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "cusip": {
                                                    "maxLength": 31,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "maxLength": 64,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "marketValue": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "symbol": {
                                                    "maxLength": 31,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "valuationDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "description"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "lastUpdated": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint",
                                            "FamilyMember",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "ownerDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Account to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Clients": {
            "post": {
                "deprecated": false,
                "description": "Description: This operation submits the Fact Finder data to an external system.<br />\r\n              Purpose: Allows Fact Finder data to be persisted in another system for that system's consumption and use.",
                "operationId": "Clients_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "clientId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ownerUser": {
                                            "type": "string"
                                        },
                                        "planId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "clientId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "ownerUser": {
                                            "type": "string"
                                        },
                                        "planId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Client."
                    },
                    "403": {
                        "description": "Request is restricted for access to Client."
                    }
                },
                "tags": [
                    "Clients"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "externalDestinationName": {
                                        "maxLength": 49,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSystem": {
                                        "enum": [
                                            "Naviplan"
                                        ],
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "planAction": {
                                        "enum": [
                                            "New",
                                            "Duplicate",
                                            "Project"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "externalSystem",
                                    "planAction"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "externalDestinationName": {
                                        "maxLength": 49,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSystem": {
                                        "enum": [
                                            "Naviplan"
                                        ],
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "planAction": {
                                        "enum": [
                                            "New",
                                            "Duplicate",
                                            "Project"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "externalSystem",
                                    "planAction"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/api/CriticalIllnessInsurancePolicies": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Critical Illness Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policies including description and policy type.",
                "operationId": "CriticalIllnessInsurancePolicies_GetCriticalIllnessInsurancePoliciesByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Critical Illness Insurance Policies",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "criticalIllnessInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "criticalIllnessInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Critical Illness Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Critical Illness Insurance Policy."
                    },
                    "404": {
                        "description": "Critical Illness Insurance Policy not found."
                    }
                },
                "tags": [
                    "CriticalIllnessInsurancePolicies"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Critical Illness Insurance Policy.<br />\r\n              Purpose: Allows for creation of Critical Illness Insurance Policies on a Fact Finder.",
                "operationId": "CriticalIllnessInsurancePolicies_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Critical Illness Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Critical Illness Insurance Policy."
                    },
                    "404": {
                        "description": "Critical Illness Insurance Policy not found."
                    }
                },
                "tags": [
                    "CriticalIllnessInsurancePolicies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Critical Illness Insurance Policy to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/CriticalIllnessInsurancePolicies/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Critical Illness Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Critical Illness Insurance Policy from a Fact Finder.",
                "operationId": "CriticalIllnessInsurancePolicies_DeleteById",
                "parameters": [
                    {
                        "description": "The Critical Illness Insurance Policy ID used to identify which Critical Illness Insurance Policy to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Critical Illness Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Critical Illness Insurance Policy."
                    },
                    "404": {
                        "description": "Critical Illness Insurance Policy not found."
                    }
                },
                "tags": [
                    "CriticalIllnessInsurancePolicies"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Critical Illness Insurance Policy for the specified Critical Illness Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy including description and policy type.",
                "operationId": "CriticalIllnessInsurancePolicies_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Critical Illness Insurance Policy used to retreive the Critical Illness Insurance Policy",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Critical Illness Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Critical Illness Insurance Policy."
                    },
                    "404": {
                        "description": "Critical Illness Insurance Policy not found."
                    }
                },
                "tags": [
                    "CriticalIllnessInsurancePolicies"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Critical Illness Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Critical Illness Insurance Policy on a Fact Finder.",
                "operationId": "CriticalIllnessInsurancePolicies_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Critical Illness Insurance Policy ID used to identify which Critical Illness Insurance Policy to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Critical Illness Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Critical Illness Insurance Policy."
                    },
                    "404": {
                        "description": "Critical Illness Insurance Policy not found."
                    }
                },
                "tags": [
                    "CriticalIllnessInsurancePolicies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Critical Illness Insurance Policy to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/CriticalIllnessInsurancePolicyTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Critical Illness Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy Types including id and type description.",
                "operationId": "CriticalIllnessInsurancePolicyTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Critical Illness Insurance Policy Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "insurancePolicyTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "insurancePolicyTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Critical Illness Insurance Policy Type not found."
                    }
                },
                "tags": [
                    "CriticalIllnessInsurancePolicyTypes"
                ]
            }
        },
        "/api/CriticalIllnessInsurancePolicyTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves the Critical Illness Insurance Policy Type for the specified id.<br />\r\n              Purpose: Provides access to the Critical Illness Insurance Policy Types including id and type description.",
                "operationId": "CriticalIllnessInsurancePolicyTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Critical Illness Insurance Policy Type used to retreive the Critical Illness Insurance Policy Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Critical Illness Insurance Policy Type not found."
                    }
                },
                "tags": [
                    "CriticalIllnessInsurancePolicyTypes"
                ]
            }
        },
        "/api/DefinedBenefitPensions": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Defined Benefit Pensions for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Defined Benefit Pensions including description and start date.",
                "operationId": "DefinedBenefitPensions_GetDefinedBenefitPensionsByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Defined Benefit Pensions",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "definedBenefitPensions": {
                                            "items": {
                                                "properties": {
                                                    "definedBenefitPensionId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "estimatedAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "definedBenefitPensions": {
                                            "items": {
                                                "properties": {
                                                    "definedBenefitPensionId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "estimatedAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Defined Benefit Pension."
                    },
                    "403": {
                        "description": "Request is restricted for access to Defined Benefit Pension."
                    },
                    "404": {
                        "description": "Defined Benefit Pension not found."
                    }
                },
                "tags": [
                    "DefinedBenefitPensions"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Defined Benefit Pension.<br />\r\n              Purpose: Allows for creation of Defined Benefit Pensions on a Fact Finder.",
                "operationId": "DefinedBenefitPensions_PostByModel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "definedBenefitPensionId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "estimatedAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "definedBenefitPensionId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "estimatedAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Defined Benefit Pension."
                    },
                    "403": {
                        "description": "Request is restricted for access to Defined Benefit Pension."
                    },
                    "404": {
                        "description": "Defined Benefit Pension not found."
                    }
                },
                "tags": [
                    "DefinedBenefitPensions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "estimatedAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "externalDestinationId": {
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "estimatedAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "externalDestinationId": {
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Defined Benefit Pension to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/DefinedBenefitPensions/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Defined Benefit Pension tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Defined Benefit Pension from a Fact Finder.",
                "operationId": "DefinedBenefitPensions_DeleteDefinedBenefitPensionById",
                "parameters": [
                    {
                        "description": "The Defined Benefit Pension ID used to identify which Defined Benefit Pension to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Defined Benefit Pension."
                    },
                    "403": {
                        "description": "Request is restricted for access to Defined Benefit Pension."
                    },
                    "404": {
                        "description": "Defined Benefit Pension not found."
                    }
                },
                "tags": [
                    "DefinedBenefitPensions"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Defined Benefit Pension for the specified Defined Benefit Pension ID.<br />\r\n              Purpose: Provides access to the Defined Benefit Pension including description and start date.",
                "operationId": "DefinedBenefitPensions_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Defined Benefit Pension used to retreive the Defined Benefit Pension",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "definedBenefitPensionId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "estimatedAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "definedBenefitPensionId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "estimatedAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Defined Benefit Pension."
                    },
                    "403": {
                        "description": "Request is restricted for access to Defined Benefit Pension."
                    },
                    "404": {
                        "description": "Defined Benefit Pension not found."
                    }
                },
                "tags": [
                    "DefinedBenefitPensions"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Defined Benefit Pension.<br />\r\n              Purpose: Allows for complete replacement of a Defined Benefit Pension on a Fact Finder.",
                "operationId": "DefinedBenefitPensions_PutDefinedBenefitPensionByIdModel",
                "parameters": [
                    {
                        "description": "The existing Defined Benefit Pension ID used to identify which Defined Benefit Pension to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "maxLength": 255,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "estimatedAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "member": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "factFinderId",
                                        "description"
                                    ],
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "maxLength": 255,
                                            "minLength": 0,
                                            "type": "string"
                                        },
                                        "estimatedAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "member": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "factFinderId",
                                        "description"
                                    ],
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Defined Benefit Pension."
                    },
                    "403": {
                        "description": "Request is restricted for access to Defined Benefit Pension."
                    },
                    "404": {
                        "description": "Defined Benefit Pension not found."
                    }
                },
                "tags": [
                    "DefinedBenefitPensions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "estimatedAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "externalDestinationId": {
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "estimatedAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "externalDestinationId": {
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Defined Benefit Pension to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Demographics": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Demographic information for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Demographic information including city and state.",
                "operationId": "Demographics_GetDemographicsByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Demographic information",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "city": {
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "head2": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "jointAnalysis": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lockRetirement": {
                                            "type": "boolean"
                                        },
                                        "state": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "city": {
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "head2": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "jointAnalysis": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lockRetirement": {
                                            "type": "boolean"
                                        },
                                        "state": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Demographic information."
                    },
                    "403": {
                        "description": "Request is restricted for access to Demographic information."
                    },
                    "404": {
                        "description": "Demographic information not found."
                    }
                },
                "tags": [
                    "Demographics"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates Demographic information.<br />\r\n              Purpose: Allows for creation of Demographic information on a Fact Finder.",
                "operationId": "Demographics_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "city": {
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "head2": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "jointAnalysis": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lockRetirement": {
                                            "type": "boolean"
                                        },
                                        "state": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "city": {
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "head2": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "jointAnalysis": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lockRetirement": {
                                            "type": "boolean"
                                        },
                                        "state": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Demographic information."
                    },
                    "403": {
                        "description": "Request is restricted for access to Demographic information."
                    },
                    "404": {
                        "description": "Demographic information not found."
                    }
                },
                "tags": [
                    "Demographics"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "head1": {
                                        "properties": {
                                            "alreadyRetired": {
                                                "type": "boolean"
                                            },
                                            "birthDate": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "gender": {
                                                "enum": [
                                                    "Male",
                                                    "Female"
                                                ],
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "taxFilingStatus": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "birthDate",
                                            "gender",
                                            "taxFilingStatus",
                                            "alreadyRetired"
                                        ],
                                        "type": "object"
                                    },
                                    "head2": {
                                        "properties": {
                                            "alreadyRetired": {
                                                "type": "boolean"
                                            },
                                            "birthDate": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "gender": {
                                                "enum": [
                                                    "Male",
                                                    "Female"
                                                ],
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "taxFilingStatus": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "birthDate",
                                            "gender",
                                            "taxFilingStatus",
                                            "alreadyRetired"
                                        ],
                                        "type": "object"
                                    },
                                    "jointAnalysis": {
                                        "type": "boolean"
                                    },
                                    "state": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "jointAnalysis",
                                    "head1",
                                    "factFinderId",
                                    "city",
                                    "state"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "head1": {
                                        "properties": {
                                            "alreadyRetired": {
                                                "type": "boolean"
                                            },
                                            "birthDate": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "gender": {
                                                "enum": [
                                                    "Male",
                                                    "Female"
                                                ],
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "taxFilingStatus": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "birthDate",
                                            "gender",
                                            "taxFilingStatus",
                                            "alreadyRetired"
                                        ],
                                        "type": "object"
                                    },
                                    "head2": {
                                        "properties": {
                                            "alreadyRetired": {
                                                "type": "boolean"
                                            },
                                            "birthDate": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "gender": {
                                                "enum": [
                                                    "Male",
                                                    "Female"
                                                ],
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "taxFilingStatus": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "birthDate",
                                            "gender",
                                            "taxFilingStatus",
                                            "alreadyRetired"
                                        ],
                                        "type": "object"
                                    },
                                    "jointAnalysis": {
                                        "type": "boolean"
                                    },
                                    "state": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "jointAnalysis",
                                    "head1",
                                    "factFinderId",
                                    "city",
                                    "state"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Demographic information to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Demographics/{demographicId}/Dependents": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Dependents for the specified Demographic information ID.<br />\r\n              Purpose: Provides access to the Dependents including first and last name.",
                "operationId": "Demographics_GetDependentsByDemographicid",
                "parameters": [
                    {
                        "description": "The ID of the Demographic information used to retrieve Dependents",
                        "in": "path",
                        "name": "demographicId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dependents": {
                                            "items": {
                                                "properties": {
                                                    "birthDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "demographicsId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "dependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "dependentOf": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "firstName": {
                                                        "type": "string"
                                                    },
                                                    "lastName": {
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "relationship": {
                                                        "enum": [
                                                            "Son",
                                                            "Daughter",
                                                            "FosterSon",
                                                            "FosterDaughter",
                                                            "Grandson",
                                                            "Granddaughter",
                                                            "Nephew",
                                                            "Niece",
                                                            "MaleCousin",
                                                            "FemaleCousin",
                                                            "Father",
                                                            "Mother",
                                                            "Grandfather",
                                                            "Grandmother",
                                                            "Uncle",
                                                            "Aunt",
                                                            "Brother",
                                                            "Sister",
                                                            "SonInLaw",
                                                            "DaughterInLaw",
                                                            "MaleOther",
                                                            "FemaleOther"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "dependents": {
                                            "items": {
                                                "properties": {
                                                    "birthDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "demographicsId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "dependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "dependentOf": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "firstName": {
                                                        "type": "string"
                                                    },
                                                    "lastName": {
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "relationship": {
                                                        "enum": [
                                                            "Son",
                                                            "Daughter",
                                                            "FosterSon",
                                                            "FosterDaughter",
                                                            "Grandson",
                                                            "Granddaughter",
                                                            "Nephew",
                                                            "Niece",
                                                            "MaleCousin",
                                                            "FemaleCousin",
                                                            "Father",
                                                            "Mother",
                                                            "Grandfather",
                                                            "Grandmother",
                                                            "Uncle",
                                                            "Aunt",
                                                            "Brother",
                                                            "Sister",
                                                            "SonInLaw",
                                                            "DaughterInLaw",
                                                            "MaleOther",
                                                            "FemaleOther"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Dependent information."
                    },
                    "403": {
                        "description": "Request is restricted for access to Dependent information."
                    },
                    "404": {
                        "description": "Dependent information not found."
                    }
                },
                "tags": [
                    "Demographics"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Dependent.<br />\r\n              Purpose: Allows for creation of Dependents on a Fact Finder.",
                "operationId": "Demographics_PostByDemographicidModel",
                "parameters": [
                    {
                        "description": "The ID of the Demographic information to add the Dependent to",
                        "in": "path",
                        "name": "demographicId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "birthDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentOf": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "relationship": {
                                            "enum": [
                                                "Son",
                                                "Daughter",
                                                "FosterSon",
                                                "FosterDaughter",
                                                "Grandson",
                                                "Granddaughter",
                                                "Nephew",
                                                "Niece",
                                                "MaleCousin",
                                                "FemaleCousin",
                                                "Father",
                                                "Mother",
                                                "Grandfather",
                                                "Grandmother",
                                                "Uncle",
                                                "Aunt",
                                                "Brother",
                                                "Sister",
                                                "SonInLaw",
                                                "DaughterInLaw",
                                                "MaleOther",
                                                "FemaleOther"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "birthDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentOf": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "relationship": {
                                            "enum": [
                                                "Son",
                                                "Daughter",
                                                "FosterSon",
                                                "FosterDaughter",
                                                "Grandson",
                                                "Granddaughter",
                                                "Nephew",
                                                "Niece",
                                                "MaleCousin",
                                                "FemaleCousin",
                                                "Father",
                                                "Mother",
                                                "Grandfather",
                                                "Grandmother",
                                                "Uncle",
                                                "Aunt",
                                                "Brother",
                                                "Sister",
                                                "SonInLaw",
                                                "DaughterInLaw",
                                                "MaleOther",
                                                "FemaleOther"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Dependent information."
                    },
                    "403": {
                        "description": "Request is restricted for access to Dependent information."
                    },
                    "404": {
                        "description": "Dependent information not found."
                    },
                    "409": {
                        "description": "The request cannot be completed."
                    }
                },
                "tags": [
                    "Demographics"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "birthDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "dependentOf": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "firstName": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "relationship": {
                                        "enum": [
                                            "Son",
                                            "Daughter",
                                            "FosterSon",
                                            "FosterDaughter",
                                            "Grandson",
                                            "Granddaughter",
                                            "Nephew",
                                            "Niece",
                                            "MaleCousin",
                                            "FemaleCousin",
                                            "Father",
                                            "Mother",
                                            "Grandfather",
                                            "Grandmother",
                                            "Uncle",
                                            "Aunt",
                                            "Brother",
                                            "Sister",
                                            "SonInLaw",
                                            "DaughterInLaw",
                                            "MaleOther",
                                            "FemaleOther"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "birthDate",
                                    "relationship",
                                    "dependentOf"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "birthDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "dependentOf": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "firstName": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "relationship": {
                                        "enum": [
                                            "Son",
                                            "Daughter",
                                            "FosterSon",
                                            "FosterDaughter",
                                            "Grandson",
                                            "Granddaughter",
                                            "Nephew",
                                            "Niece",
                                            "MaleCousin",
                                            "FemaleCousin",
                                            "Father",
                                            "Mother",
                                            "Grandfather",
                                            "Grandmother",
                                            "Uncle",
                                            "Aunt",
                                            "Brother",
                                            "Sister",
                                            "SonInLaw",
                                            "DaughterInLaw",
                                            "MaleOther",
                                            "FemaleOther"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "birthDate",
                                    "relationship",
                                    "dependentOf"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Dependent to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Demographics/{demographicId}/Dependents/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Dependent tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Dependent from a Fact Finder.",
                "operationId": "Demographics_DeleteDependentByDemographicidId",
                "parameters": [
                    {
                        "description": "The ID of the Demographic information used to identify which Dependent to remove",
                        "in": "path",
                        "name": "demographicId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The Dependent ID used to identify which Dependent to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Dependent information."
                    },
                    "403": {
                        "description": "Request is restricted for access to Dependent information."
                    },
                    "404": {
                        "description": "Dependent information not found."
                    }
                },
                "tags": [
                    "Demographics"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Dependent for the specified Dependent ID.<br />\r\n              Purpose: Provides access to the Dependent including first and last name.",
                "operationId": "Demographics_GetDependentByDemographicidId",
                "parameters": [
                    {
                        "description": "The ID of the Demographic information used to retrieve Dependents",
                        "in": "path",
                        "name": "demographicId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The ID of the Dependent used to retreive the Dependent",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "birthDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentOf": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "relationship": {
                                            "enum": [
                                                "Son",
                                                "Daughter",
                                                "FosterSon",
                                                "FosterDaughter",
                                                "Grandson",
                                                "Granddaughter",
                                                "Nephew",
                                                "Niece",
                                                "MaleCousin",
                                                "FemaleCousin",
                                                "Father",
                                                "Mother",
                                                "Grandfather",
                                                "Grandmother",
                                                "Uncle",
                                                "Aunt",
                                                "Brother",
                                                "Sister",
                                                "SonInLaw",
                                                "DaughterInLaw",
                                                "MaleOther",
                                                "FemaleOther"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "birthDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentOf": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "relationship": {
                                            "enum": [
                                                "Son",
                                                "Daughter",
                                                "FosterSon",
                                                "FosterDaughter",
                                                "Grandson",
                                                "Granddaughter",
                                                "Nephew",
                                                "Niece",
                                                "MaleCousin",
                                                "FemaleCousin",
                                                "Father",
                                                "Mother",
                                                "Grandfather",
                                                "Grandmother",
                                                "Uncle",
                                                "Aunt",
                                                "Brother",
                                                "Sister",
                                                "SonInLaw",
                                                "DaughterInLaw",
                                                "MaleOther",
                                                "FemaleOther"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Dependent information."
                    },
                    "403": {
                        "description": "Request is restricted for access to Dependent information."
                    },
                    "404": {
                        "description": "Dependent information not found."
                    }
                },
                "tags": [
                    "Demographics"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Dependent.<br />\r\n              Purpose: Allows for complete replacement of a Dependent on a Fact Finder.",
                "operationId": "Demographics_PutByDemographicidIdModel",
                "parameters": [
                    {
                        "description": "The ID of the Demographic information used to identify which Dependent to update",
                        "in": "path",
                        "name": "demographicId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The existing Dependent ID used to identify which Dependent to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "birthDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentOf": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "relationship": {
                                            "enum": [
                                                "Son",
                                                "Daughter",
                                                "FosterSon",
                                                "FosterDaughter",
                                                "Grandson",
                                                "Granddaughter",
                                                "Nephew",
                                                "Niece",
                                                "MaleCousin",
                                                "FemaleCousin",
                                                "Father",
                                                "Mother",
                                                "Grandfather",
                                                "Grandmother",
                                                "Uncle",
                                                "Aunt",
                                                "Brother",
                                                "Sister",
                                                "SonInLaw",
                                                "DaughterInLaw",
                                                "MaleOther",
                                                "FemaleOther"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "birthDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentOf": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "relationship": {
                                            "enum": [
                                                "Son",
                                                "Daughter",
                                                "FosterSon",
                                                "FosterDaughter",
                                                "Grandson",
                                                "Granddaughter",
                                                "Nephew",
                                                "Niece",
                                                "MaleCousin",
                                                "FemaleCousin",
                                                "Father",
                                                "Mother",
                                                "Grandfather",
                                                "Grandmother",
                                                "Uncle",
                                                "Aunt",
                                                "Brother",
                                                "Sister",
                                                "SonInLaw",
                                                "DaughterInLaw",
                                                "MaleOther",
                                                "FemaleOther"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Dependent information."
                    },
                    "403": {
                        "description": "Request is restricted for access to Dependent information."
                    },
                    "404": {
                        "description": "Dependent information not found."
                    }
                },
                "tags": [
                    "Demographics"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "birthDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "dependentOf": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "firstName": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "relationship": {
                                        "enum": [
                                            "Son",
                                            "Daughter",
                                            "FosterSon",
                                            "FosterDaughter",
                                            "Grandson",
                                            "Granddaughter",
                                            "Nephew",
                                            "Niece",
                                            "MaleCousin",
                                            "FemaleCousin",
                                            "Father",
                                            "Mother",
                                            "Grandfather",
                                            "Grandmother",
                                            "Uncle",
                                            "Aunt",
                                            "Brother",
                                            "Sister",
                                            "SonInLaw",
                                            "DaughterInLaw",
                                            "MaleOther",
                                            "FemaleOther"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "birthDate",
                                    "relationship",
                                    "dependentOf"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "birthDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "dependentOf": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "firstName": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "relationship": {
                                        "enum": [
                                            "Son",
                                            "Daughter",
                                            "FosterSon",
                                            "FosterDaughter",
                                            "Grandson",
                                            "Granddaughter",
                                            "Nephew",
                                            "Niece",
                                            "MaleCousin",
                                            "FemaleCousin",
                                            "Father",
                                            "Mother",
                                            "Grandfather",
                                            "Grandmother",
                                            "Uncle",
                                            "Aunt",
                                            "Brother",
                                            "Sister",
                                            "SonInLaw",
                                            "DaughterInLaw",
                                            "MaleOther",
                                            "FemaleOther"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "birthDate",
                                    "relationship",
                                    "dependentOf"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Dependent to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Demographics/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves Demographic information for the specified Demographic information ID.<br />\r\n              Purpose: Provides access to the Demographic information including city and state.",
                "operationId": "Demographics_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Demographic information used to retreive the Demographic information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "city": {
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "head2": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "jointAnalysis": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lockRetirement": {
                                            "type": "boolean"
                                        },
                                        "state": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "city": {
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "head2": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "jointAnalysis": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lockRetirement": {
                                            "type": "boolean"
                                        },
                                        "state": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Demographic information."
                    },
                    "403": {
                        "description": "Request is restricted for access to Demographic information."
                    },
                    "404": {
                        "description": "Demographic information not found."
                    }
                },
                "tags": [
                    "Demographics"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates Demographic information.<br />\r\n              Purpose: Allows for complete replacement of Demographic information on a Fact Finder.",
                "operationId": "Demographics_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Demographic information ID used to identify which Demographic information to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "city": {
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "head2": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "jointAnalysis": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lockRetirement": {
                                            "type": "boolean"
                                        },
                                        "state": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "city": {
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "head2": {
                                            "properties": {
                                                "alreadyRetired": {
                                                    "type": "boolean"
                                                },
                                                "birthDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "firstName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "enum": [
                                                        "Male",
                                                        "Female"
                                                    ],
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string"
                                                },
                                                "taxFilingStatus": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "firstName",
                                                "lastName",
                                                "birthDate",
                                                "gender",
                                                "taxFilingStatus",
                                                "alreadyRetired"
                                            ],
                                            "type": "object"
                                        },
                                        "jointAnalysis": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lockRetirement": {
                                            "type": "boolean"
                                        },
                                        "state": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Demographic information."
                    },
                    "403": {
                        "description": "Request is restricted for access to Demographic information."
                    },
                    "404": {
                        "description": "Demographic information not found."
                    },
                    "409": {
                        "description": "The request cannot be completed."
                    }
                },
                "tags": [
                    "Demographics"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "head1": {
                                        "properties": {
                                            "alreadyRetired": {
                                                "type": "boolean"
                                            },
                                            "birthDate": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "gender": {
                                                "enum": [
                                                    "Male",
                                                    "Female"
                                                ],
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "taxFilingStatus": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "birthDate",
                                            "gender",
                                            "taxFilingStatus",
                                            "alreadyRetired"
                                        ],
                                        "type": "object"
                                    },
                                    "head2": {
                                        "properties": {
                                            "alreadyRetired": {
                                                "type": "boolean"
                                            },
                                            "birthDate": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "gender": {
                                                "enum": [
                                                    "Male",
                                                    "Female"
                                                ],
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "taxFilingStatus": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "birthDate",
                                            "gender",
                                            "taxFilingStatus",
                                            "alreadyRetired"
                                        ],
                                        "type": "object"
                                    },
                                    "jointAnalysis": {
                                        "type": "boolean"
                                    },
                                    "state": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "jointAnalysis",
                                    "head1",
                                    "factFinderId",
                                    "city",
                                    "state"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "head1": {
                                        "properties": {
                                            "alreadyRetired": {
                                                "type": "boolean"
                                            },
                                            "birthDate": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "gender": {
                                                "enum": [
                                                    "Male",
                                                    "Female"
                                                ],
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "taxFilingStatus": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "birthDate",
                                            "gender",
                                            "taxFilingStatus",
                                            "alreadyRetired"
                                        ],
                                        "type": "object"
                                    },
                                    "head2": {
                                        "properties": {
                                            "alreadyRetired": {
                                                "type": "boolean"
                                            },
                                            "birthDate": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "firstName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "gender": {
                                                "enum": [
                                                    "Male",
                                                    "Female"
                                                ],
                                                "type": "string"
                                            },
                                            "lastName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string"
                                            },
                                            "taxFilingStatus": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "birthDate",
                                            "gender",
                                            "taxFilingStatus",
                                            "alreadyRetired"
                                        ],
                                        "type": "object"
                                    },
                                    "jointAnalysis": {
                                        "type": "boolean"
                                    },
                                    "state": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "jointAnalysis",
                                    "head1",
                                    "factFinderId",
                                    "city",
                                    "state"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Demographic information to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/DisabilityInsurancePolicies": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Disability Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Disability Insurance Policies including description and policy type.",
                "operationId": "DisabilityInsurancePolicies_GetDisabilityInsurancePoliciesByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Disability Insurance Policies",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "disabilityInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "benefitFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "premiumFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "disabilityInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "benefitFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "premiumFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Disability Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Disability Insurance Policy."
                    },
                    "404": {
                        "description": "Disability Insurance Policy not found."
                    }
                },
                "tags": [
                    "DisabilityInsurancePolicies"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Disability Insurance Policy.<br />\r\n              Purpose: Allows for creation of Disability Insurance Policies on a Fact Finder.",
                "operationId": "DisabilityInsurancePolicies_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Disability Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Disability Insurance Policy."
                    },
                    "404": {
                        "description": "Disability Insurance Policy not found."
                    }
                },
                "tags": [
                    "DisabilityInsurancePolicies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "benefitFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "premiumFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "benefitFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "premiumFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Disability Insurance Policy to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/DisabilityInsurancePolicies/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Disability Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Disability Insurance Policy from a Fact Finder.",
                "operationId": "DisabilityInsurancePolicies_DeleteById",
                "parameters": [
                    {
                        "description": "The Disability Insurance Policy ID used to identify which Disability Insurance Policy to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Disability Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Disability Insurance Policy."
                    },
                    "404": {
                        "description": "Disability Insurance Policy not found."
                    }
                },
                "tags": [
                    "DisabilityInsurancePolicies"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Disability Insurance Policy for the specified Disability Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy including description and policy type.",
                "operationId": "DisabilityInsurancePolicies_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Disability Insurance Policy used to retreive the Disability Insurance Policy",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Disability Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Disability Insurance Policy."
                    },
                    "404": {
                        "description": "Disability Insurance Policy not found."
                    }
                },
                "tags": [
                    "DisabilityInsurancePolicies"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Disability Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Disability Insurance Policy on a Fact Finder.",
                "operationId": "DisabilityInsurancePolicies_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Disability Insurance Policy ID used to identify which Disability Insurance Policy to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Disability Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Disability Insurance Policy."
                    },
                    "404": {
                        "description": "Disability Insurance Policy not found."
                    }
                },
                "tags": [
                    "DisabilityInsurancePolicies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "benefitFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "premiumFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "benefitFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "premiumFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Disability Insurance Policy to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/DisabilityInsurancePolicyTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Disability Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy Types including id and type description.",
                "operationId": "DisabilityInsurancePolicyTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Disability Insurance Policy Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "insurancePolicyTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "insurancePolicyTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Disability Insurance Policy Type not found."
                    }
                },
                "tags": [
                    "DisabilityInsurancePolicyTypes"
                ]
            }
        },
        "/api/DisabilityInsurancePolicyTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Disability Insurance Policy Types for the specified id.<br />\r\n              Purpose: Provides access to the Disability Insurance Policy Types including id and type description.",
                "operationId": "DisabilityInsurancePolicyTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Disability Insurance Policy Type used to retreive the Disability Insurance Policy Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Disability Insurance Policy Type not found."
                    }
                },
                "tags": [
                    "DisabilityInsurancePolicyTypes"
                ]
            }
        },
        "/api/EducationGoals": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Education Goals for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Education Goals including description and projected cost.",
                "operationId": "EducationGoals_GetEducationGoalsByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Education Goals",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "educationGoals": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "educationGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "projectedCost": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "educationGoals": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "educationGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "projectedCost": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal."
                    },
                    "404": {
                        "description": "Education Goal not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates an Education Goal.<br />\r\n              Purpose: Allows for creation of Education Goals on a Fact Finder.",
                "operationId": "EducationGoals_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "projectedCost": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "projectedCost": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal."
                    },
                    "404": {
                        "description": "Education Goal not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "projectedCost": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "projectedCost": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Education Goal to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/EducationGoals/{educationGoalId}/Expenses": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Education Goal Expenses for the specified Education Goal ID.<br />\r\n              Purpose: Provides access to the Education Goal Expenses including description and annual cost.",
                "operationId": "EducationGoals_GetEducationExpensesByEducationGoalIdByEducationgoalid",
                "parameters": [
                    {
                        "description": "The ID of the Education Goal used to retrieve Education Goal Expenses",
                        "in": "path",
                        "name": "educationGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "educationExpenses": {
                                            "items": {
                                                "properties": {
                                                    "annualCost": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "educationExpenseId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "educationGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Dependent"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "memberDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "startYear": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "years": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "educationExpenses": {
                                            "items": {
                                                "properties": {
                                                    "annualCost": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "educationExpenseId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "educationGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Dependent"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "memberDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "startYear": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "years": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal Expense."
                    },
                    "404": {
                        "description": "Education Goal Expense not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates an Education Goal Expense.<br />\r\n              Purpose: Allows for creation of Education Goal Expenses on a Fact Finder.",
                "operationId": "EducationGoals_PostByEducationgoalidModel",
                "parameters": [
                    {
                        "description": "The Education Goal ID used to locate the Goal to add the expense to",
                        "in": "path",
                        "name": "educationGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "annualCost": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "educationExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Dependent"
                                            ],
                                            "type": "string"
                                        },
                                        "memberDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startYear": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "years": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "annualCost": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "educationExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Dependent"
                                            ],
                                            "type": "string"
                                        },
                                        "memberDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startYear": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "years": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal Expense."
                    },
                    "404": {
                        "description": "Education Goal Expense not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "annualCost": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Dependent"
                                        ],
                                        "type": "string"
                                    },
                                    "memberDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "startYear": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "years": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "annualCost": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Dependent"
                                        ],
                                        "type": "string"
                                    },
                                    "memberDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "startYear": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "years": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Education Goal Expense to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/EducationGoals/{educationGoalId}/Expenses/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes an Education Goal Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Education Goal Expense from a Fact Finder.",
                "operationId": "EducationGoals_DeleteByEducationgoalidId",
                "parameters": [
                    {
                        "description": "The Education Goal ID used to locate the Goal to delete the Expense under",
                        "in": "path",
                        "name": "educationGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The Education Goal Expense ID used to identify which Education Goal Expense to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal Expense."
                    },
                    "404": {
                        "description": "Education Goal Expense not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Education Goal Expense for the specified Education Goal Expense ID.<br />\r\n              Purpose: Provides access to the Education Goal Expense including description and annual cost.",
                "operationId": "EducationGoals_GetEducationExpenseByEducationgoalidId",
                "parameters": [
                    {
                        "description": "The ID of the Education Goal used to retrieve Education Goal Expenses",
                        "in": "path",
                        "name": "educationGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The ID of the Education Goal Expense used to retreive the Education Goal Expense",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "annualCost": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "educationExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Dependent"
                                            ],
                                            "type": "string"
                                        },
                                        "memberDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startYear": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "years": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "annualCost": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "educationExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Dependent"
                                            ],
                                            "type": "string"
                                        },
                                        "memberDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startYear": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "years": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal Expense."
                    },
                    "404": {
                        "description": "Education Goal Expense not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates an Education Goal Expense.<br />\r\n              Purpose: Allows for complete replacement of an Education Goal Expense on a Fact Finder.",
                "operationId": "EducationGoals_PutByEducationgoalidIdModel",
                "parameters": [
                    {
                        "description": "The Education Goal ID used to locate the Goal to update the Expense under",
                        "in": "path",
                        "name": "educationGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The existing Education Goal Expense ID used to identify which Education Goal Expense to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "annualCost": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "educationExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Dependent"
                                            ],
                                            "type": "string"
                                        },
                                        "memberDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startYear": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "years": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "annualCost": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "educationExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Dependent"
                                            ],
                                            "type": "string"
                                        },
                                        "memberDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startYear": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "years": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal Expense."
                    },
                    "404": {
                        "description": "Education Goal Expense not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "annualCost": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Dependent"
                                        ],
                                        "type": "string"
                                    },
                                    "memberDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "startYear": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "years": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "annualCost": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Dependent"
                                        ],
                                        "type": "string"
                                    },
                                    "memberDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "startYear": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "years": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Education Goal Expense to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/EducationGoals/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes an Education Goal tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Education Goal from a Fact Finder.",
                "operationId": "EducationGoals_DeleteById",
                "parameters": [
                    {
                        "description": "The Education Goal ID used to identify which Education Goal to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal."
                    },
                    "404": {
                        "description": "Education Goal not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Education Goal for the specified Education Goal ID.<br />\r\n              Purpose: Provides access to the Education Goal including description and projected cost.",
                "operationId": "EducationGoals_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Education Goal used to retreive the Education Goal",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "projectedCost": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "projectedCost": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal."
                    },
                    "404": {
                        "description": "Education Goal not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation creates an Education Goal Expense.<br />\r\n              Purpose: Allows for creation of Education Goal Expenses on a Fact Finder.",
                "operationId": "EducationGoals_PutByIdModel",
                "parameters": [
                    {
                        "description": "The Education Goal ID used to locate the Goal to add the Expense to",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "projectedCost": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "educationGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "projectedCost": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Education Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Education Goal Expense."
                    },
                    "404": {
                        "description": "Education Goal not found."
                    }
                },
                "tags": [
                    "EducationGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "projectedCost": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "projectedCost": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Education Goal Expense to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/ExpenseTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Expense Types for the specified country.<br />\r\n              Purpose: Provides access to the Expense Types including id and type description.",
                "operationId": "ExpenseTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Expense Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "expenseTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "expenseTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Expense Type not found."
                    }
                },
                "tags": [
                    "ExpenseTypes"
                ]
            }
        },
        "/api/ExpenseTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Expense Types for the specified country.<br />\r\n              Purpose: Provides access to the Expense Types including id and type description.",
                "operationId": "ExpenseTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Expense Type used to retreive the Expense Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Expense Type not found."
                    }
                },
                "tags": [
                    "ExpenseTypes"
                ]
            }
        },
        "/api/Expenses": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Expenses for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Expenses including description and Expense type.",
                "operationId": "Expenses_GetExpensesByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Expenses",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "expenses": {
                                            "items": {
                                                "properties": {
                                                    "annualPeriod": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "expenseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "expenseId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "expenseTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "expenses": {
                                            "items": {
                                                "properties": {
                                                    "annualPeriod": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "expenseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "expenseId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "expenseTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Expense."
                    },
                    "404": {
                        "description": "Expense not found."
                    }
                },
                "tags": [
                    "Expenses"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates an Expense.<br />\r\n              Purpose: Allows for creation of Expenses on a Fact Finder.",
                "operationId": "Expenses_PostByModel",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "expenseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "expenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "expenseTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "expenseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "expenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "expenseTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Expense."
                    },
                    "404": {
                        "description": "Expense not found."
                    }
                },
                "tags": [
                    "Expenses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "annualPeriod": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "expenseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "expenseTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "annualPeriod": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "expenseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "expenseTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Expense to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Expenses/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes an Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Expense from a Fact Finder.",
                "operationId": "Expenses_DeleteById",
                "parameters": [
                    {
                        "description": "The Expense ID used to identify which Expense to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Expense."
                    },
                    "404": {
                        "description": "Expense not found."
                    }
                },
                "tags": [
                    "Expenses"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Expense for the specified Expense ID.<br />\r\n              Purpose: Provides access to the Expense including description and Expense type.",
                "operationId": "Expenses_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Expense used to retreive the Expense",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "expenseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "expenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "expenseTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "expenseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "expenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "expenseTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Expense."
                    },
                    "404": {
                        "description": "Expense not found."
                    }
                },
                "tags": [
                    "Expenses"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates an Expense.<br />\r\n              Purpose: Allows for complete replacement of an Expense on a Fact Finder.",
                "operationId": "Expenses_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Expense ID used to identify which Expense to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "expenseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "expenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "expenseTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "expenseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "expenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "expenseTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Expense."
                    },
                    "404": {
                        "description": "Expense not found."
                    }
                },
                "tags": [
                    "Expenses"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "annualPeriod": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "expenseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "expenseTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "annualPeriod": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "expenseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "expenseTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Expense to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/FactFinders": {
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Fact Finder.<br />\r\n              Purpose: Allows for creation of Fact Finders.",
                "operationId": "FactFinders_PostByModel",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "countryCode": {
                                            "enum": [
                                                "UnitedStates",
                                                "Canada"
                                            ],
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalId": {
                                            "type": "string"
                                        },
                                        "externalSystem": {
                                            "enum": [
                                                "Naviplan"
                                            ],
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastStatusUpdate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "modules": {
                                            "properties": {
                                                "factFinderModules": {
                                                    "items": {
                                                        "properties": {
                                                            "available": {
                                                                "type": "boolean"
                                                            },
                                                            "factFinderId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "links": {
                                                                "items": {
                                                                    "properties": {
                                                                        "href": {
                                                                            "type": "string"
                                                                        },
                                                                        "rel": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "moduleId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "moduleName": {
                                                                "enum": [
                                                                    "Demographics",
                                                                    "Assets",
                                                                    "Liabilities",
                                                                    "Incomes",
                                                                    "Expenses",
                                                                    "Insurance",
                                                                    "Retirement",
                                                                    "Education",
                                                                    "MajorPurchase"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "visited": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "enum": [
                                                "New",
                                                "InProgress",
                                                "ClientSubmitted",
                                                "AdvisorAccepted"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "countryCode": {
                                            "enum": [
                                                "UnitedStates",
                                                "Canada"
                                            ],
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalId": {
                                            "type": "string"
                                        },
                                        "externalSystem": {
                                            "enum": [
                                                "Naviplan"
                                            ],
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastStatusUpdate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "modules": {
                                            "properties": {
                                                "factFinderModules": {
                                                    "items": {
                                                        "properties": {
                                                            "available": {
                                                                "type": "boolean"
                                                            },
                                                            "factFinderId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "links": {
                                                                "items": {
                                                                    "properties": {
                                                                        "href": {
                                                                            "type": "string"
                                                                        },
                                                                        "rel": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "moduleId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "moduleName": {
                                                                "enum": [
                                                                    "Demographics",
                                                                    "Assets",
                                                                    "Liabilities",
                                                                    "Incomes",
                                                                    "Expenses",
                                                                    "Insurance",
                                                                    "Retirement",
                                                                    "Education",
                                                                    "MajorPurchase"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "visited": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "enum": [
                                                "New",
                                                "InProgress",
                                                "ClientSubmitted",
                                                "AdvisorAccepted"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Fact Finder."
                    },
                    "403": {
                        "description": "Request is restricted for access to Fact Finder."
                    },
                    "404": {
                        "description": "Fact Finder not found."
                    },
                    "409": {
                        "description": "The request cannot be completed."
                    }
                },
                "tags": [
                    "FactFinders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "countryCode": {
                                        "enum": [
                                            "UnitedStates",
                                            "Canada"
                                        ],
                                        "type": "string"
                                    },
                                    "externalDemographicsSourceId": {
                                        "type": "string"
                                    },
                                    "externalId": {
                                        "type": "string"
                                    },
                                    "externalSystem": {
                                        "enum": [
                                            "Naviplan"
                                        ],
                                        "type": "string"
                                    },
                                    "factFinderUserId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "modules": {
                                        "items": {
                                            "properties": {
                                                "available": {
                                                    "type": "boolean"
                                                },
                                                "moduleName": {
                                                    "enum": [
                                                        "Demographics",
                                                        "Assets",
                                                        "Liabilities",
                                                        "Incomes",
                                                        "Expenses",
                                                        "Insurance",
                                                        "Retirement",
                                                        "Education",
                                                        "MajorPurchase"
                                                    ],
                                                    "type": "string"
                                                },
                                                "visited": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "moduleName"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "status": {
                                        "enum": [
                                            "New",
                                            "InProgress",
                                            "ClientSubmitted",
                                            "AdvisorAccepted"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderUserId"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "countryCode": {
                                        "enum": [
                                            "UnitedStates",
                                            "Canada"
                                        ],
                                        "type": "string"
                                    },
                                    "externalDemographicsSourceId": {
                                        "type": "string"
                                    },
                                    "externalId": {
                                        "type": "string"
                                    },
                                    "externalSystem": {
                                        "enum": [
                                            "Naviplan"
                                        ],
                                        "type": "string"
                                    },
                                    "factFinderUserId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "modules": {
                                        "items": {
                                            "properties": {
                                                "available": {
                                                    "type": "boolean"
                                                },
                                                "moduleName": {
                                                    "enum": [
                                                        "Demographics",
                                                        "Assets",
                                                        "Liabilities",
                                                        "Incomes",
                                                        "Expenses",
                                                        "Insurance",
                                                        "Retirement",
                                                        "Education",
                                                        "MajorPurchase"
                                                    ],
                                                    "type": "string"
                                                },
                                                "visited": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "moduleName"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "status": {
                                        "enum": [
                                            "New",
                                            "InProgress",
                                            "ClientSubmitted",
                                            "AdvisorAccepted"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderUserId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Fact Finder to be added to the User",
                    "required": true
                }
            }
        },
        "/api/FactFinders/{factFinderId}/Modules": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Fact Finder Modules for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Fact Finder Modules including description and policy type.",
                "operationId": "FactFinderModules_GetByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Fact Finder Modules",
                        "in": "path",
                        "name": "factFinderId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "factFinderModules": {
                                            "items": {
                                                "properties": {
                                                    "available": {
                                                        "type": "boolean"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "moduleId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "moduleName": {
                                                        "enum": [
                                                            "Demographics",
                                                            "Assets",
                                                            "Liabilities",
                                                            "Incomes",
                                                            "Expenses",
                                                            "Insurance",
                                                            "Retirement",
                                                            "Education",
                                                            "MajorPurchase"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "visited": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "factFinderModules": {
                                            "items": {
                                                "properties": {
                                                    "available": {
                                                        "type": "boolean"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "moduleId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "moduleName": {
                                                        "enum": [
                                                            "Demographics",
                                                            "Assets",
                                                            "Liabilities",
                                                            "Incomes",
                                                            "Expenses",
                                                            "Insurance",
                                                            "Retirement",
                                                            "Education",
                                                            "MajorPurchase"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "visited": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Fact Finder Module."
                    },
                    "404": {
                        "description": "Fact Finder Module not found."
                    }
                },
                "tags": [
                    "FactFinderModules"
                ]
            }
        },
        "/api/FactFinders/{factFinderId}/Modules/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Fact Finder Module for the specified Fact Finder Module ID.<br />\r\n              Purpose: Provides access to the Fact Finder Module including description and policy type.",
                "operationId": "FactFinderModules_GetByFactfinderidId",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Fact Finder Module",
                        "in": "path",
                        "name": "factFinderId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The ID of the Fact Finder Module used to retreive the Fact Finder Module",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "moduleId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "moduleName": {
                                            "enum": [
                                                "Demographics",
                                                "Assets",
                                                "Liabilities",
                                                "Incomes",
                                                "Expenses",
                                                "Insurance",
                                                "Retirement",
                                                "Education",
                                                "MajorPurchase"
                                            ],
                                            "type": "string"
                                        },
                                        "visited": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "moduleId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "moduleName": {
                                            "enum": [
                                                "Demographics",
                                                "Assets",
                                                "Liabilities",
                                                "Incomes",
                                                "Expenses",
                                                "Insurance",
                                                "Retirement",
                                                "Education",
                                                "MajorPurchase"
                                            ],
                                            "type": "string"
                                        },
                                        "visited": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Fact Finder Module."
                    },
                    "404": {
                        "description": "Fact Finder Module not found."
                    }
                },
                "tags": [
                    "FactFinderModules"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Fact Finder Module.<br />\r\n              Purpose: Allows for complete replacement of a Fact Finder Module on a Fact Finder.",
                "operationId": "FactFinderModules_PutByModelFactfinderidId",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to identify the Fact Finder Module to update",
                        "in": "path",
                        "name": "factFinderId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The existing Fact Finder Module ID used to identify which Fact Finder Module to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "moduleId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "moduleName": {
                                            "enum": [
                                                "Demographics",
                                                "Assets",
                                                "Liabilities",
                                                "Incomes",
                                                "Expenses",
                                                "Insurance",
                                                "Retirement",
                                                "Education",
                                                "MajorPurchase"
                                            ],
                                            "type": "string"
                                        },
                                        "visited": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "moduleId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "moduleName": {
                                            "enum": [
                                                "Demographics",
                                                "Assets",
                                                "Liabilities",
                                                "Incomes",
                                                "Expenses",
                                                "Insurance",
                                                "Retirement",
                                                "Education",
                                                "MajorPurchase"
                                            ],
                                            "type": "string"
                                        },
                                        "visited": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Fact Finder Module."
                    },
                    "404": {
                        "description": "Fact Finder Module not found."
                    }
                },
                "tags": [
                    "FactFinderModules"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "available": {
                                        "type": "boolean"
                                    },
                                    "moduleName": {
                                        "enum": [
                                            "Demographics",
                                            "Assets",
                                            "Liabilities",
                                            "Incomes",
                                            "Expenses",
                                            "Insurance",
                                            "Retirement",
                                            "Education",
                                            "MajorPurchase"
                                        ],
                                        "type": "string"
                                    },
                                    "visited": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "moduleName"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "available": {
                                        "type": "boolean"
                                    },
                                    "moduleName": {
                                        "enum": [
                                            "Demographics",
                                            "Assets",
                                            "Liabilities",
                                            "Incomes",
                                            "Expenses",
                                            "Insurance",
                                            "Retirement",
                                            "Education",
                                            "MajorPurchase"
                                        ],
                                        "type": "string"
                                    },
                                    "visited": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "moduleName"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Fact Finder Module to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/FactFinders/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Fact Finder for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Fact Finder including status.",
                "operationId": "FactFinders_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retreive the Fact Finder",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "countryCode": {
                                            "enum": [
                                                "UnitedStates",
                                                "Canada"
                                            ],
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalId": {
                                            "type": "string"
                                        },
                                        "externalSystem": {
                                            "enum": [
                                                "Naviplan"
                                            ],
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastStatusUpdate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "modules": {
                                            "properties": {
                                                "factFinderModules": {
                                                    "items": {
                                                        "properties": {
                                                            "available": {
                                                                "type": "boolean"
                                                            },
                                                            "factFinderId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "links": {
                                                                "items": {
                                                                    "properties": {
                                                                        "href": {
                                                                            "type": "string"
                                                                        },
                                                                        "rel": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "moduleId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "moduleName": {
                                                                "enum": [
                                                                    "Demographics",
                                                                    "Assets",
                                                                    "Liabilities",
                                                                    "Incomes",
                                                                    "Expenses",
                                                                    "Insurance",
                                                                    "Retirement",
                                                                    "Education",
                                                                    "MajorPurchase"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "visited": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "enum": [
                                                "New",
                                                "InProgress",
                                                "ClientSubmitted",
                                                "AdvisorAccepted"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "countryCode": {
                                            "enum": [
                                                "UnitedStates",
                                                "Canada"
                                            ],
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalId": {
                                            "type": "string"
                                        },
                                        "externalSystem": {
                                            "enum": [
                                                "Naviplan"
                                            ],
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastStatusUpdate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "modules": {
                                            "properties": {
                                                "factFinderModules": {
                                                    "items": {
                                                        "properties": {
                                                            "available": {
                                                                "type": "boolean"
                                                            },
                                                            "factFinderId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "links": {
                                                                "items": {
                                                                    "properties": {
                                                                        "href": {
                                                                            "type": "string"
                                                                        },
                                                                        "rel": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "moduleId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "moduleName": {
                                                                "enum": [
                                                                    "Demographics",
                                                                    "Assets",
                                                                    "Liabilities",
                                                                    "Incomes",
                                                                    "Expenses",
                                                                    "Insurance",
                                                                    "Retirement",
                                                                    "Education",
                                                                    "MajorPurchase"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "visited": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "enum": [
                                                "New",
                                                "InProgress",
                                                "ClientSubmitted",
                                                "AdvisorAccepted"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Unauthorized for Fact Finder data access"
                    },
                    "403": {
                        "description": "Request is restricted for access to Fact Finder."
                    },
                    "404": {
                        "description": "Fact Finder not found."
                    }
                },
                "tags": [
                    "FactFinders"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Fact Finder.<br />\r\n              Purpose: Allows for the updating of a Fact Finder.",
                "operationId": "FactFinders_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Fact Finder ID used to identify which Fact Finder to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "countryCode": {
                                            "enum": [
                                                "UnitedStates",
                                                "Canada"
                                            ],
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalId": {
                                            "type": "string"
                                        },
                                        "externalSystem": {
                                            "enum": [
                                                "Naviplan"
                                            ],
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastStatusUpdate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "modules": {
                                            "properties": {
                                                "factFinderModules": {
                                                    "items": {
                                                        "properties": {
                                                            "available": {
                                                                "type": "boolean"
                                                            },
                                                            "factFinderId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "links": {
                                                                "items": {
                                                                    "properties": {
                                                                        "href": {
                                                                            "type": "string"
                                                                        },
                                                                        "rel": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "moduleId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "moduleName": {
                                                                "enum": [
                                                                    "Demographics",
                                                                    "Assets",
                                                                    "Liabilities",
                                                                    "Incomes",
                                                                    "Expenses",
                                                                    "Insurance",
                                                                    "Retirement",
                                                                    "Education",
                                                                    "MajorPurchase"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "visited": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "enum": [
                                                "New",
                                                "InProgress",
                                                "ClientSubmitted",
                                                "AdvisorAccepted"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "countryCode": {
                                            "enum": [
                                                "UnitedStates",
                                                "Canada"
                                            ],
                                            "type": "string"
                                        },
                                        "created": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalId": {
                                            "type": "string"
                                        },
                                        "externalSystem": {
                                            "enum": [
                                                "Naviplan"
                                            ],
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lastStatusUpdate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "modules": {
                                            "properties": {
                                                "factFinderModules": {
                                                    "items": {
                                                        "properties": {
                                                            "available": {
                                                                "type": "boolean"
                                                            },
                                                            "factFinderId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "links": {
                                                                "items": {
                                                                    "properties": {
                                                                        "href": {
                                                                            "type": "string"
                                                                        },
                                                                        "rel": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "moduleId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "moduleName": {
                                                                "enum": [
                                                                    "Demographics",
                                                                    "Assets",
                                                                    "Liabilities",
                                                                    "Incomes",
                                                                    "Expenses",
                                                                    "Insurance",
                                                                    "Retirement",
                                                                    "Education",
                                                                    "MajorPurchase"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "visited": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "status": {
                                            "enum": [
                                                "New",
                                                "InProgress",
                                                "ClientSubmitted",
                                                "AdvisorAccepted"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Fact Finder."
                    },
                    "403": {
                        "description": "Request is restricted for access to Fact Finder."
                    },
                    "404": {
                        "description": "Fact Finder not found."
                    }
                },
                "tags": [
                    "FactFinders"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "countryCode": {
                                        "enum": [
                                            "UnitedStates",
                                            "Canada"
                                        ],
                                        "type": "string"
                                    },
                                    "factFinderUserId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "modules": {
                                        "items": {
                                            "properties": {
                                                "available": {
                                                    "type": "boolean"
                                                },
                                                "moduleName": {
                                                    "enum": [
                                                        "Demographics",
                                                        "Assets",
                                                        "Liabilities",
                                                        "Incomes",
                                                        "Expenses",
                                                        "Insurance",
                                                        "Retirement",
                                                        "Education",
                                                        "MajorPurchase"
                                                    ],
                                                    "type": "string"
                                                },
                                                "visited": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "moduleName"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "status": {
                                        "enum": [
                                            "New",
                                            "InProgress",
                                            "ClientSubmitted",
                                            "AdvisorAccepted"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderUserId"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "countryCode": {
                                        "enum": [
                                            "UnitedStates",
                                            "Canada"
                                        ],
                                        "type": "string"
                                    },
                                    "factFinderUserId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "modules": {
                                        "items": {
                                            "properties": {
                                                "available": {
                                                    "type": "boolean"
                                                },
                                                "moduleName": {
                                                    "enum": [
                                                        "Demographics",
                                                        "Assets",
                                                        "Liabilities",
                                                        "Incomes",
                                                        "Expenses",
                                                        "Insurance",
                                                        "Retirement",
                                                        "Education",
                                                        "MajorPurchase"
                                                    ],
                                                    "type": "string"
                                                },
                                                "visited": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "moduleName"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "status": {
                                        "enum": [
                                            "New",
                                            "InProgress",
                                            "ClientSubmitted",
                                            "AdvisorAccepted"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderUserId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Fact Finder to be updated",
                    "required": true
                }
            }
        },
        "/api/FactFinders/{id}/Snapshot": {
            "post": {
                "deprecated": false,
                "description": "Description: The operation produces a Fact Finder based on input from a back office system.<br />\r\n              Purpose: Allows for advisors to compare the fact finder to the old plan prior to acceptance.",
                "operationId": "FactFinders_PostById",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retreive the Fact Finder Snapshot",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accounts": {
                                            "items": {
                                                "properties": {
                                                    "accountHoldings": {
                                                        "items": {
                                                            "properties": {
                                                                "accountHoldingId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "accountId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "costBasis": {
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "cusip": {
                                                                    "type": "string"
                                                                },
                                                                "description": {
                                                                    "type": "string"
                                                                },
                                                                "externalDestinationId": {
                                                                    "type": "string"
                                                                },
                                                                "heldAway": {
                                                                    "type": "boolean"
                                                                },
                                                                "marketValue": {
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "symbol": {
                                                                    "type": "string"
                                                                },
                                                                "valuationDate": {
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "accountId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "accountType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceName": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastUpdated": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint",
                                                            "FamilyMember",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ownerDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "criticalIllnessInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "criticalIllnessInsurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "definedBenefitPensions": {
                                            "items": {
                                                "properties": {
                                                    "definedBenefitPensionId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "estimatedAmount": {
                                                        "format": "double",
                                                        "readOnly": true,
                                                        "type": "number"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "demographics": {
                                            "properties": {
                                                "city": {
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "demographicsId": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "dependents": {
                                                    "items": {
                                                        "properties": {
                                                            "birthDate": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "demographicsId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "dependentId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "dependentOf": {
                                                                "enum": [
                                                                    "Head1",
                                                                    "Head2",
                                                                    "Joint",
                                                                    "Other"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "externalDestinationId": {
                                                                "type": "string"
                                                            },
                                                            "firstName": {
                                                                "type": "string"
                                                            },
                                                            "lastName": {
                                                                "type": "string"
                                                            },
                                                            "relationship": {
                                                                "enum": [
                                                                    "Son",
                                                                    "Daughter",
                                                                    "FosterSon",
                                                                    "FosterDaughter",
                                                                    "Grandson",
                                                                    "Granddaughter",
                                                                    "Nephew",
                                                                    "Niece",
                                                                    "MaleCousin",
                                                                    "FemaleCousin",
                                                                    "Father",
                                                                    "Mother",
                                                                    "Grandfather",
                                                                    "Grandmother",
                                                                    "Uncle",
                                                                    "Aunt",
                                                                    "Brother",
                                                                    "Sister",
                                                                    "SonInLaw",
                                                                    "DaughterInLaw",
                                                                    "MaleOther",
                                                                    "FemaleOther"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "externalSourceId": {
                                                    "type": "string"
                                                },
                                                "factFinderId": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "head1": {
                                                    "properties": {
                                                        "alreadyRetired": {
                                                            "type": "boolean"
                                                        },
                                                        "birthDate": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "externalDestinationId": {
                                                            "type": "string"
                                                        },
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "enum": [
                                                                "Male",
                                                                "Female"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "lastName": {
                                                            "type": "string"
                                                        },
                                                        "taxFilingStatus": {
                                                            "format": "int32",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "head2": {
                                                    "properties": {
                                                        "alreadyRetired": {
                                                            "type": "boolean"
                                                        },
                                                        "birthDate": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "externalDestinationId": {
                                                            "type": "string"
                                                        },
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "enum": [
                                                                "Male",
                                                                "Female"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "lastName": {
                                                            "type": "string"
                                                        },
                                                        "taxFilingStatus": {
                                                            "format": "int32",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "jointAnalysis": {
                                                    "type": "boolean"
                                                },
                                                "lockRetirement": {
                                                    "type": "boolean"
                                                },
                                                "state": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "disabilityInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "benefitFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "disabilityInsurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "premiumFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "educationGoals": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "educationExpenses": {
                                                        "items": {
                                                            "properties": {
                                                                "annualCost": {
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "educationExpenseId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "educationGoalId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "externalDestinationId": {
                                                                    "type": "string"
                                                                },
                                                                "member": {
                                                                    "enum": [
                                                                        "Head1",
                                                                        "Head2",
                                                                        "Dependent"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "memberDependentId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "startYear": {
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "years": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "educationGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "projectedCost": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "expenses": {
                                            "items": {
                                                "properties": {
                                                    "annualPeriod": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "expenseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "expenseId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "expenseTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "incomes": {
                                            "items": {
                                                "properties": {
                                                    "annualAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "incomeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "incomeTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "liabilities": {
                                            "items": {
                                                "properties": {
                                                    "balance": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "balanceAsOfDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "importSource": {
                                                        "type": "string"
                                                    },
                                                    "interestRate": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "lastUpdated": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "liabilityId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "liabilityType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "loanDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "originalPrincipal": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "payment": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "paymentType": {
                                                        "enum": [
                                                            "InterestOnly",
                                                            "PrincipalAndInterest",
                                                            "SetPrincipal",
                                                            "LastPeriod"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lifeInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "beneficiary": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Dependent",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "beneficiaryDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "FirstToDie",
                                                            "SecondToDie",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "lifeInsurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "payer": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lifestyleAssets": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "lifestyleAssetId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "readOnly": true,
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "purchaseAmount": {
                                                        "format": "double",
                                                        "readOnly": true,
                                                        "type": "number"
                                                    },
                                                    "purchaseDate": {
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "longTermCareInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "benefitFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "longTermCareInsurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "premiumFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoals": {
                                            "items": {
                                                "properties": {
                                                    "amount": {
                                                        "format": "double",
                                                        "readOnly": true,
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "majorPurchaseGoalId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "majorPurchaseGoalTypeId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "targetDate": {
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "planYear": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "realEstateAssets": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "purchaseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "purchaseDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "realEstateAssetId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "rentalIncome": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "retirementGoal": {
                                            "properties": {
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "factFinderId": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "head1RetirementDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "head2RetirementDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "retirementExpenses": {
                                                    "items": {
                                                        "properties": {
                                                            "amount": {
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "annualPeriod": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "endDate": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "externalDestinationId": {
                                                                "type": "string"
                                                            },
                                                            "frequency": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "member": {
                                                                "enum": [
                                                                    "Head1",
                                                                    "Head2",
                                                                    "Joint"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "retirementExpenseId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "retirementGoalId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "startDate": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "retirementGoalId": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "accounts": {
                                            "items": {
                                                "properties": {
                                                    "accountHoldings": {
                                                        "items": {
                                                            "properties": {
                                                                "accountHoldingId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "accountId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "costBasis": {
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "cusip": {
                                                                    "type": "string"
                                                                },
                                                                "description": {
                                                                    "type": "string"
                                                                },
                                                                "externalDestinationId": {
                                                                    "type": "string"
                                                                },
                                                                "heldAway": {
                                                                    "type": "boolean"
                                                                },
                                                                "marketValue": {
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "symbol": {
                                                                    "type": "string"
                                                                },
                                                                "valuationDate": {
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "accountId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "accountType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceName": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastUpdated": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint",
                                                            "FamilyMember",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "ownerDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "criticalIllnessInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "criticalIllnessInsurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "definedBenefitPensions": {
                                            "items": {
                                                "properties": {
                                                    "definedBenefitPensionId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "estimatedAmount": {
                                                        "format": "double",
                                                        "readOnly": true,
                                                        "type": "number"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "demographics": {
                                            "properties": {
                                                "city": {
                                                    "type": "string"
                                                },
                                                "created": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "demographicsId": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "dependents": {
                                                    "items": {
                                                        "properties": {
                                                            "birthDate": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "demographicsId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "dependentId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "dependentOf": {
                                                                "enum": [
                                                                    "Head1",
                                                                    "Head2",
                                                                    "Joint",
                                                                    "Other"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "externalDestinationId": {
                                                                "type": "string"
                                                            },
                                                            "firstName": {
                                                                "type": "string"
                                                            },
                                                            "lastName": {
                                                                "type": "string"
                                                            },
                                                            "relationship": {
                                                                "enum": [
                                                                    "Son",
                                                                    "Daughter",
                                                                    "FosterSon",
                                                                    "FosterDaughter",
                                                                    "Grandson",
                                                                    "Granddaughter",
                                                                    "Nephew",
                                                                    "Niece",
                                                                    "MaleCousin",
                                                                    "FemaleCousin",
                                                                    "Father",
                                                                    "Mother",
                                                                    "Grandfather",
                                                                    "Grandmother",
                                                                    "Uncle",
                                                                    "Aunt",
                                                                    "Brother",
                                                                    "Sister",
                                                                    "SonInLaw",
                                                                    "DaughterInLaw",
                                                                    "MaleOther",
                                                                    "FemaleOther"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "externalSourceId": {
                                                    "type": "string"
                                                },
                                                "factFinderId": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "head1": {
                                                    "properties": {
                                                        "alreadyRetired": {
                                                            "type": "boolean"
                                                        },
                                                        "birthDate": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "externalDestinationId": {
                                                            "type": "string"
                                                        },
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "enum": [
                                                                "Male",
                                                                "Female"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "lastName": {
                                                            "type": "string"
                                                        },
                                                        "taxFilingStatus": {
                                                            "format": "int32",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "head2": {
                                                    "properties": {
                                                        "alreadyRetired": {
                                                            "type": "boolean"
                                                        },
                                                        "birthDate": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "externalDestinationId": {
                                                            "type": "string"
                                                        },
                                                        "firstName": {
                                                            "type": "string"
                                                        },
                                                        "gender": {
                                                            "enum": [
                                                                "Male",
                                                                "Female"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "lastName": {
                                                            "type": "string"
                                                        },
                                                        "taxFilingStatus": {
                                                            "format": "int32",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "jointAnalysis": {
                                                    "type": "boolean"
                                                },
                                                "lockRetirement": {
                                                    "type": "boolean"
                                                },
                                                "state": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "disabilityInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "benefitFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "disabilityInsurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "premiumFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "educationGoals": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "educationExpenses": {
                                                        "items": {
                                                            "properties": {
                                                                "annualCost": {
                                                                    "format": "double",
                                                                    "type": "number"
                                                                },
                                                                "educationExpenseId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "educationGoalId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "externalDestinationId": {
                                                                    "type": "string"
                                                                },
                                                                "member": {
                                                                    "enum": [
                                                                        "Head1",
                                                                        "Head2",
                                                                        "Dependent"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "memberDependentId": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                },
                                                                "startYear": {
                                                                    "format": "date-time",
                                                                    "type": "string"
                                                                },
                                                                "years": {
                                                                    "format": "int32",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "educationGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "projectedCost": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "expenses": {
                                            "items": {
                                                "properties": {
                                                    "annualPeriod": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "expenseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "expenseId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "expenseTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "incomes": {
                                            "items": {
                                                "properties": {
                                                    "annualAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "incomeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "incomeTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "liabilities": {
                                            "items": {
                                                "properties": {
                                                    "balance": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "balanceAsOfDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "importSource": {
                                                        "type": "string"
                                                    },
                                                    "interestRate": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "lastUpdated": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "liabilityId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "liabilityType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "loanDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "originalPrincipal": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "payment": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "paymentType": {
                                                        "enum": [
                                                            "InterestOnly",
                                                            "PrincipalAndInterest",
                                                            "SetPrincipal",
                                                            "LastPeriod"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lifeInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "beneficiary": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Dependent",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "beneficiaryDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "FirstToDie",
                                                            "SecondToDie",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "lifeInsurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "payer": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "lifestyleAssets": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "lifestyleAssetId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "readOnly": true,
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "purchaseAmount": {
                                                        "format": "double",
                                                        "readOnly": true,
                                                        "type": "number"
                                                    },
                                                    "purchaseDate": {
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "longTermCareInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "benefitFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "longTermCareInsurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "premiumFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoals": {
                                            "items": {
                                                "properties": {
                                                    "amount": {
                                                        "format": "double",
                                                        "readOnly": true,
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "majorPurchaseGoalId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "majorPurchaseGoalTypeId": {
                                                        "format": "int32",
                                                        "readOnly": true,
                                                        "type": "integer"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "readOnly": true,
                                                        "type": "string"
                                                    },
                                                    "targetDate": {
                                                        "format": "date-time",
                                                        "readOnly": true,
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "planYear": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "realEstateAssets": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "purchaseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "purchaseDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "realEstateAssetId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "rentalIncome": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "retirementGoal": {
                                            "properties": {
                                                "externalDestinationId": {
                                                    "type": "string"
                                                },
                                                "factFinderId": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "head1RetirementDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "head2RetirementDate": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "retirementExpenses": {
                                                    "items": {
                                                        "properties": {
                                                            "amount": {
                                                                "format": "double",
                                                                "type": "number"
                                                            },
                                                            "annualPeriod": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "description": {
                                                                "type": "string"
                                                            },
                                                            "endDate": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            },
                                                            "externalDestinationId": {
                                                                "type": "string"
                                                            },
                                                            "frequency": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "member": {
                                                                "enum": [
                                                                    "Head1",
                                                                    "Head2",
                                                                    "Joint"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "retirementExpenseId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "retirementGoalId": {
                                                                "format": "int32",
                                                                "type": "integer"
                                                            },
                                                            "startDate": {
                                                                "format": "date-time",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "retirementGoalId": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Unauthorized for Fact Finder data access"
                    },
                    "403": {
                        "description": "Request is restricted for access to Fact Finder."
                    },
                    "404": {
                        "description": "Fact Finder Snapshot not found."
                    }
                },
                "tags": [
                    "FactFinders"
                ]
            }
        },
        "/api/FilingStatusTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Filing Status Types for the specified country.<br />\r\n              Purpose: Provides access to the Filing Status Types including id and type description.",
                "operationId": "FilingStatusTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Filing Status Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "filingStatusTypes": {
                                            "items": {
                                                "properties": {
                                                    "filingStatusTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "filingStatusTypeName": {
                                                        "type": "string"
                                                    },
                                                    "hasJointDependent": {
                                                        "type": "boolean"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "partnerStatuses": {
                                                        "items": {
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "validForSingleAnalysis": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "filingStatusTypes": {
                                            "items": {
                                                "properties": {
                                                    "filingStatusTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "filingStatusTypeName": {
                                                        "type": "string"
                                                    },
                                                    "hasJointDependent": {
                                                        "type": "boolean"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "partnerStatuses": {
                                                        "items": {
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "validForSingleAnalysis": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Filing Status Type not found."
                    }
                },
                "tags": [
                    "FilingStatusTypes"
                ]
            }
        },
        "/api/FilingStatusTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Filing Status Type for the specified id.<br />\r\n              Purpose: Provides access to the Filing Status Types including id and type description.",
                "operationId": "FilingStatusTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Filing Status Type used to retreive the Filing Status Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "filingStatusTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "filingStatusTypeName": {
                                            "type": "string"
                                        },
                                        "hasJointDependent": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "partnerStatuses": {
                                            "items": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "type": "array"
                                        },
                                        "validForSingleAnalysis": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "filingStatusTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "filingStatusTypeName": {
                                            "type": "string"
                                        },
                                        "hasJointDependent": {
                                            "type": "boolean"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "partnerStatuses": {
                                            "items": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "type": "array"
                                        },
                                        "validForSingleAnalysis": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Filing Status Type not found."
                    }
                },
                "tags": [
                    "FilingStatusTypes"
                ]
            }
        },
        "/api/FrequencyTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Frequency Types for the specified country and entity.<br />\r\n              Purpose: Provides access to the Frequency Types including id and type description.",
                "operationId": "FrequencyTypes_GetByEntityCountry",
                "parameters": [
                    {
                        "description": "The entity used to filter Frequency Types",
                        "in": "query",
                        "name": "entity",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CriticalIllnessInsurancePolicies",
                                "DisabilityInsurancePoliciesPremium",
                                "DisabilityInsurancePoliciesBenefit",
                                "Expenses",
                                "Liabilities",
                                "LifeInsurancePolicies",
                                "LongTermCareInsurancePoliciesBenefit",
                                "LongTermCareInsurancePoliciesPremium",
                                "RealEstateAssets",
                                "RetirementExpenses"
                            ]
                        }
                    },
                    {
                        "description": "The country used to filter Frequency Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "frequencyTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "frequencyTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Frequency Type not found."
                    }
                },
                "tags": [
                    "FrequencyTypes"
                ]
            }
        },
        "/api/FrequencyTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves the Frequency Type for the specified id.<br />\r\n              Purpose: Provides access to the Frequency Types including id and type description.",
                "operationId": "FrequencyTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Frequency Type used to retreive the Frequency Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Frequency Type not found."
                    }
                },
                "tags": [
                    "FrequencyTypes"
                ]
            }
        },
        "/api/IncomeTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Income Types for the specified country.<br />\r\n              Purpose: Provides access to the Income Types including id and type description.",
                "operationId": "IncomeTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Income Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "incomeTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "incomeTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Income Type not found."
                    }
                },
                "tags": [
                    "IncomeTypes"
                ]
            }
        },
        "/api/IncomeTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves the Income Type for the specified id.<br />\r\n              Purpose: Provides access to the Income Types including id and type description.",
                "operationId": "IncomeTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Income Type used to retreive the Income Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Income Type not found."
                    }
                },
                "tags": [
                    "IncomeTypes"
                ]
            }
        },
        "/api/Incomes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Incomes for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Incomes including annual amount and start date.",
                "operationId": "Incomes_GetIncomesByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Incomes",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "incomes": {
                                            "items": {
                                                "properties": {
                                                    "annualAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "incomeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "incomeTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "incomes": {
                                            "items": {
                                                "properties": {
                                                    "annualAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "incomeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "incomeTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Income."
                    },
                    "403": {
                        "description": "Request is restricted for access to Income."
                    },
                    "404": {
                        "description": "Income not found."
                    }
                },
                "tags": [
                    "Incomes"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates an Income.<br />\r\n              Purpose: Allows for creation of Incomes on a Fact Finder.",
                "operationId": "Incomes_PostByModel",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "annualAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "annualAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Income."
                    },
                    "403": {
                        "description": "Request is restricted for access to Income."
                    },
                    "404": {
                        "description": "Income not found."
                    }
                },
                "tags": [
                    "Incomes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "annualAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "incomeTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "annualAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "incomeTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Income to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Incomes/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes an Income tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of an Income from a Fact Finder.",
                "operationId": "Incomes_DeleteById",
                "parameters": [
                    {
                        "description": "The Income ID used to identify which Income to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Income."
                    },
                    "403": {
                        "description": "Request is restricted for access to Income."
                    },
                    "404": {
                        "description": "Income not found."
                    }
                },
                "tags": [
                    "Incomes"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Income for the specified Income ID.<br />\r\n              Purpose: Provides access to the Income including annual amount and start date.",
                "operationId": "Incomes_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Income used to retreive the Income",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "annualAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "annualAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Income."
                    },
                    "403": {
                        "description": "Request is restricted for access to Income."
                    },
                    "404": {
                        "description": "Income not found."
                    }
                },
                "tags": [
                    "Incomes"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates an Income.<br />\r\n              Purpose: Allows for complete replacement of an Income on a Fact Finder.",
                "operationId": "Incomes_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Income ID used to identify which Income to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "annualAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "annualAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "incomeTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Income."
                    },
                    "403": {
                        "description": "Request is restricted for access to Income."
                    },
                    "404": {
                        "description": "Income not found."
                    }
                },
                "tags": [
                    "Incomes"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "annualAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "incomeTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "annualAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "incomeTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Income to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Liabilities": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Liabilities for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Liabilities including owner and type.",
                "operationId": "Liabilities_GetLiabilitiesByFactFinderIdByFactfinderidExternalsourceid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Liabilities",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The external source ID used to filter Liabilities",
                        "in": "query",
                        "name": "externalSourceId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "liabilities": {
                                            "items": {
                                                "properties": {
                                                    "balance": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "balanceAsOfDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceName": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "interestRate": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "lastUpdated": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "liabilityId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "liabilityType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "loanDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "originalPrincipal": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "payment": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "paymentType": {
                                                        "enum": [
                                                            "InterestOnly",
                                                            "PrincipalAndInterest",
                                                            "SetPrincipal",
                                                            "LastPeriod"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "liabilities": {
                                            "items": {
                                                "properties": {
                                                    "balance": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "balanceAsOfDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceId": {
                                                        "type": "string"
                                                    },
                                                    "externalSourceName": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "interestRate": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "lastUpdated": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "liabilityId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "liabilityType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "loanDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "originalPrincipal": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "payment": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "paymentType": {
                                                        "enum": [
                                                            "InterestOnly",
                                                            "PrincipalAndInterest",
                                                            "SetPrincipal",
                                                            "LastPeriod"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Liability."
                    },
                    "403": {
                        "description": "Request is restricted for access to Liability."
                    },
                    "404": {
                        "description": "Liability not found."
                    }
                },
                "tags": [
                    "Liabilities"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Liability.<br />\r\n              Purpose: Allows for creation of Liabilities on a Fact Finder.",
                "operationId": "Liabilities_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "balance": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "balanceAsOfDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "interestRate": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "liabilityId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "liabilityType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "loanDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "originalPrincipal": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "payment": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "paymentType": {
                                            "enum": [
                                                "InterestOnly",
                                                "PrincipalAndInterest",
                                                "SetPrincipal",
                                                "LastPeriod"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "balance": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "balanceAsOfDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "interestRate": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "liabilityId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "liabilityType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "loanDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "originalPrincipal": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "payment": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "paymentType": {
                                            "enum": [
                                                "InterestOnly",
                                                "PrincipalAndInterest",
                                                "SetPrincipal",
                                                "LastPeriod"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Liability."
                    },
                    "403": {
                        "description": "Request is restricted for access to Liability."
                    },
                    "404": {
                        "description": "Liability not found."
                    }
                },
                "tags": [
                    "Liabilities"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "balance": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "balanceAsOfDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceName": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "interestRate": {
                                        "format": "double",
                                        "maximum": 50,
                                        "minimum": 0,
                                        "type": "number"
                                    },
                                    "lastUpdated": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "liabilityType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "loanDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "originalPrincipal": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "payment": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "paymentType": {
                                        "enum": [
                                            "InterestOnly",
                                            "PrincipalAndInterest",
                                            "SetPrincipal",
                                            "LastPeriod"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "balance": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "balanceAsOfDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceName": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "interestRate": {
                                        "format": "double",
                                        "maximum": 50,
                                        "minimum": 0,
                                        "type": "number"
                                    },
                                    "lastUpdated": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "liabilityType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "loanDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "originalPrincipal": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "payment": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "paymentType": {
                                        "enum": [
                                            "InterestOnly",
                                            "PrincipalAndInterest",
                                            "SetPrincipal",
                                            "LastPeriod"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Liability to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/Liabilities/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Liability tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Liability from a Fact Finder.",
                "operationId": "Liabilities_DeleteById",
                "parameters": [
                    {
                        "description": "The Liability ID used to identify which Liability to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Liability."
                    },
                    "403": {
                        "description": "Request is restricted for access to Liability."
                    },
                    "404": {
                        "description": "Liability not found."
                    }
                },
                "tags": [
                    "Liabilities"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Liability for the specified Liability ID.<br />\r\n              Purpose: Provides access to the Liability including owner and type.",
                "operationId": "Liabilities_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Liability used to retreive the Liability",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "balance": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "balanceAsOfDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "interestRate": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "liabilityId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "liabilityType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "loanDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "originalPrincipal": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "payment": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "paymentType": {
                                            "enum": [
                                                "InterestOnly",
                                                "PrincipalAndInterest",
                                                "SetPrincipal",
                                                "LastPeriod"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "balance": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "balanceAsOfDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "interestRate": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "liabilityId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "liabilityType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "loanDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "originalPrincipal": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "payment": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "paymentType": {
                                            "enum": [
                                                "InterestOnly",
                                                "PrincipalAndInterest",
                                                "SetPrincipal",
                                                "LastPeriod"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Liability."
                    },
                    "403": {
                        "description": "Request is restricted for access to Liability."
                    },
                    "404": {
                        "description": "Liability not found."
                    }
                },
                "tags": [
                    "Liabilities"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Liability.<br />\r\n              Purpose: Allows for complete replacement of a Liability on a Fact Finder.",
                "operationId": "Liabilities_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Liability ID used to identify which Liability to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "balance": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "balanceAsOfDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "interestRate": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "liabilityId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "liabilityType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "loanDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "originalPrincipal": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "payment": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "paymentType": {
                                            "enum": [
                                                "InterestOnly",
                                                "PrincipalAndInterest",
                                                "SetPrincipal",
                                                "LastPeriod"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "balance": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "balanceAsOfDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "externalSourceId": {
                                            "type": "string"
                                        },
                                        "externalSourceName": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "interestRate": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "lastUpdated": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "liabilityId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "liabilityType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "loanDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "originalPrincipal": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "payment": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "paymentType": {
                                            "enum": [
                                                "InterestOnly",
                                                "PrincipalAndInterest",
                                                "SetPrincipal",
                                                "LastPeriod"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Liability."
                    },
                    "403": {
                        "description": "Request is restricted for access to Liability."
                    },
                    "404": {
                        "description": "Liability not found."
                    }
                },
                "tags": [
                    "Liabilities"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "balance": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "balanceAsOfDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceName": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "interestRate": {
                                        "format": "double",
                                        "maximum": 50,
                                        "minimum": 0,
                                        "type": "number"
                                    },
                                    "lastUpdated": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "liabilityType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "loanDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "originalPrincipal": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "payment": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "paymentType": {
                                        "enum": [
                                            "InterestOnly",
                                            "PrincipalAndInterest",
                                            "SetPrincipal",
                                            "LastPeriod"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "balance": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "balanceAsOfDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalSourceName": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "interestRate": {
                                        "format": "double",
                                        "maximum": 50,
                                        "minimum": 0,
                                        "type": "number"
                                    },
                                    "lastUpdated": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "liabilityType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "loanDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "originalPrincipal": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "payment": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "paymentType": {
                                        "enum": [
                                            "InterestOnly",
                                            "PrincipalAndInterest",
                                            "SetPrincipal",
                                            "LastPeriod"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Liability to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/LiabilityTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Liability Types for the specified country.<br />\r\n              Purpose: Provides access to the Liability Types including id and type description.",
                "operationId": "LiabilityTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Liability Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "liabilityTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "liabilityTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Liability Type not found."
                    }
                },
                "tags": [
                    "LiabilityTypes"
                ]
            }
        },
        "/api/LiabilityTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves the Liability Type for the specified id.<br />\r\n              Purpose: Provides access to the Liability Types including id and type description.",
                "operationId": "LiabilityTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Liability Type used to retreive the Liability Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Liability Type not found."
                    }
                },
                "tags": [
                    "LiabilityTypes"
                ]
            }
        },
        "/api/LifeInsurancePolicies": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Life Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policies including description and policy type.",
                "operationId": "LifeInsurancePolicies_GetLifeInsurancePoliciesByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Life Insurance Policies",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lifeInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "beneficiary": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Dependent",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "beneficiaryDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "FirstToDie",
                                                            "SecondToDie",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "payer": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "lifeInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "beneficiary": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Dependent",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "beneficiaryDependentId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "FirstToDie",
                                                            "SecondToDie",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "payer": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint",
                                                            "Other"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "policyType": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Life Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Life Insurance Policy."
                    },
                    "404": {
                        "description": "Life Insurance Policy not found."
                    }
                },
                "tags": [
                    "LifeInsurancePolicies"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Life Insurance Policy.<br />\r\n              Purpose: Allows for creation of Life Insurance Policies on a Fact Finder.",
                "operationId": "LifeInsurancePolicies_PostByModel",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "beneficiary": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Dependent",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "beneficiaryDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "FirstToDie",
                                                "SecondToDie",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "payer": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "beneficiary": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Dependent",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "beneficiaryDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "FirstToDie",
                                                "SecondToDie",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "payer": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Life Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Life Insurance Policy."
                    },
                    "404": {
                        "description": "Life Insurance Policy not found."
                    }
                },
                "tags": [
                    "LifeInsurancePolicies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "beneficiary": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Dependent",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "beneficiaryDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "FirstToDie",
                                            "SecondToDie",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "payer": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "beneficiary": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Dependent",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "beneficiaryDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "FirstToDie",
                                            "SecondToDie",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "payer": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Life Insurance Policy to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/LifeInsurancePolicies/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Life Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Life Insurance Policy from a Fact Finder.",
                "operationId": "LifeInsurancePolicies_DeleteById",
                "parameters": [
                    {
                        "description": "The Life Insurance Policy ID used to identify which Life Insurance Policy to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Life Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Life Insurance Policy."
                    },
                    "404": {
                        "description": "Life Insurance Policy not found."
                    }
                },
                "tags": [
                    "LifeInsurancePolicies"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Life Insurance Policy for the specified Life Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Life Insurance Policy including description and policy type.",
                "operationId": "LifeInsurancePolicies_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Life Insurance Policy used to retreive the Life Insurance Policy",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "beneficiary": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Dependent",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "beneficiaryDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "FirstToDie",
                                                "SecondToDie",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "payer": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "beneficiary": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Dependent",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "beneficiaryDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "FirstToDie",
                                                "SecondToDie",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "payer": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Life Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Life Insurance Policy."
                    },
                    "404": {
                        "description": "Life Insurance Policy not found."
                    }
                },
                "tags": [
                    "LifeInsurancePolicies"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Life Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Life Insurance Policy on a Fact Finder.",
                "operationId": "LifeInsurancePolicies_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Life Insurance Policy ID used to identify which Life Insurance Policy to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "beneficiary": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Dependent",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "beneficiaryDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "FirstToDie",
                                                "SecondToDie",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "payer": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "beneficiary": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Dependent",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "beneficiaryDependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "FirstToDie",
                                                "SecondToDie",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "payer": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "policyType": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Life Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Life Insurance Policy."
                    },
                    "404": {
                        "description": "Life Insurance Policy not found."
                    }
                },
                "tags": [
                    "LifeInsurancePolicies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "beneficiary": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Dependent",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "beneficiaryDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "FirstToDie",
                                            "SecondToDie",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "payer": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "beneficiary": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Dependent",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "beneficiaryDependentId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "FirstToDie",
                                            "SecondToDie",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "payer": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "policyType": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Life Insurance Policy to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/LifeInsurancePolicyTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Life Insurance Policy Types for the specified country.<br />\r\n              Purpose: Provides access to the Life Insurance Policy Types including id and type description.",
                "operationId": "LifeInsurancePolicyTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Life Insurance Policy Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "insurancePolicyTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "insurancePolicyTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Life Insurance Policy Type not found."
                    }
                },
                "tags": [
                    "LifeInsurancePolicyTypes"
                ]
            }
        },
        "/api/LifeInsurancePolicyTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves the Life Insurance Policy Type for the specified id.<br />\r\n              Purpose: Provides access to the Life Insurance Policy Types including id and type description.",
                "operationId": "LifeInsurancePolicyTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Life Insurance Policy Type used to retreive the Life Insurance Policy Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Life Insurance Policy Type not found."
                    }
                },
                "tags": [
                    "LifeInsurancePolicyTypes"
                ]
            }
        },
        "/api/LifestyleAssetTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Lifestyle Asset Types for the specified country.<br />\r\n              Purpose: Provides access to the Lifestyle Asset Types including id and type description.",
                "operationId": "LifestyleAssetTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Lifestyle Asset Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lifestyleAssetTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "lifestyleAssetTypes": {
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Lifestyle Asset Type not found."
                    }
                },
                "tags": [
                    "LifestyleAssetTypes"
                ]
            }
        },
        "/api/LifestyleAssetTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves the Lifestyle Asset Type for the specified id.<br />\r\n              Purpose: Provides access to the Lifestyle Asset Types including id and type description.",
                "operationId": "LifestyleAssetTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Lifestyle Asset Type used to retreive the Lifestyle Asset Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Lifestyle Asset Type not found."
                    }
                },
                "tags": [
                    "LifestyleAssetTypes"
                ]
            }
        },
        "/api/LifestyleAssets": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Lifestyle Assets for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Lifestyle Assets including description and market value.",
                "operationId": "LifestyleAssets_GetLifestyleAssetsByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Lifestyle Assets",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "lifestyleAssets": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lifestyleAssetId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "purchaseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "purchaseDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "lifestyleAssets": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lifestyleAssetId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "purchaseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "purchaseDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Lifestyle Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Lifestyle Asset."
                    },
                    "404": {
                        "description": "Lifestyle Asset not found."
                    }
                },
                "tags": [
                    "LifestyleAssets"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Lifestyle Asset.<br />\r\n              Purpose: Allows for creation of Lifestyle Assets on a Fact Finder.",
                "operationId": "LifestyleAssets_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lifestyleAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "type": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lifestyleAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "type": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Lifestyle Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Lifestyle Asset."
                    },
                    "404": {
                        "description": "Lifestyle Asset not found."
                    }
                },
                "tags": [
                    "LifestyleAssets"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "purchaseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "purchaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "type": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "purchaseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "purchaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "type": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Lifestyle Asset to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/LifestyleAssets/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Lifestyle Asset tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Lifestyle Asset from a Fact Finder.",
                "operationId": "LifestyleAssets_DeleteById",
                "parameters": [
                    {
                        "description": "The Lifestyle Asset ID used to identify which Lifestyle Asset to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Lifestyle Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Lifestyle Asset."
                    },
                    "404": {
                        "description": "Lifestyle Asset not found."
                    }
                },
                "tags": [
                    "LifestyleAssets"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Lifestyle Asset for the specified Lifestyle Asset ID.<br />\r\n              Purpose: Provides access to the Lifestyle Asset including description and market value.",
                "operationId": "LifestyleAssets_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Lifestyle Asset used to retreive the Lifestyle Asset",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lifestyleAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "type": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lifestyleAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "type": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Lifestyle Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Lifestyle Asset."
                    },
                    "404": {
                        "description": "Lifestyle Asset not found."
                    }
                },
                "tags": [
                    "LifestyleAssets"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Lifestyle Asset.<br />\r\n              Purpose: Allows for complete replacement of a Lifestyle Asset on a Fact Finder.",
                "operationId": "LifestyleAssets_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Lifestyle Asset ID used to identify which Lifestyle Asset to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lifestyleAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "type": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "lifestyleAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "type": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Lifestyle Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Lifestyle Asset."
                    },
                    "404": {
                        "description": "Lifestyle Asset not found."
                    }
                },
                "tags": [
                    "LifestyleAssets"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "purchaseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "purchaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "type": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "purchaseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "purchaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "type": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Lifestyle Asset to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/LongTermCareInsurancePolicies": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Long Term Care Insurance Policies for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Long Term Care Insurance Policies including description and premium.",
                "operationId": "LongTermCareInsurancePolicies_GetLongTermCareInsurancePoliciesByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Long Term Care Insurance Policies",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "longTermCareInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "benefitFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "premiumFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "longTermCareInsurancePolicies": {
                                            "items": {
                                                "properties": {
                                                    "benefit": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "benefitFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insurancePolicyId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "insured": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "premium": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "premiumFrequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Long Term Care Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Long Term Care Insurance Policy."
                    },
                    "404": {
                        "description": "Long Term Care Insurance Policy not found."
                    }
                },
                "tags": [
                    "LongTermCareInsurancePolicies"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Long Term Care Insurance Policy.<br />\r\n              Purpose: Allows for creation of Long Term Care Insurance Policies on a Fact Finder.",
                "operationId": "LongTermCareInsurancePolicies_PostByModel",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Long Term Care Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Long Term Care Insurance Policy."
                    },
                    "404": {
                        "description": "Long Term Care Insurance Policy not found."
                    }
                },
                "tags": [
                    "LongTermCareInsurancePolicies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "benefitFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "premiumFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "benefitFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "premiumFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Long Term Care Insurance Policy to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/LongTermCareInsurancePolicies/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Long Term Care Insurance Policy tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Long Term Care Insurance Policy from a Fact Finder.",
                "operationId": "LongTermCareInsurancePolicies_DeleteById",
                "parameters": [
                    {
                        "description": "The Long Term Care Insurance Policy ID used to identify which Long Term Care Insurance Policy to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Long Term Care Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Long Term Care Insurance Policy."
                    },
                    "404": {
                        "description": "Long Term Care Insurance Policy not found."
                    }
                },
                "tags": [
                    "LongTermCareInsurancePolicies"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Long Term Care Insurance Policy for the specified Long Term Care Insurance Policy ID.<br />\r\n              Purpose: Provides access to the Long Term Care Insurance Policy including description and premium.",
                "operationId": "LongTermCareInsurancePolicies_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Long Term Care Insurance Policy used to retreive the Long Term Care Insurance Policy",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "benefit": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "benefitFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insurancePolicyId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "insured": {
                                            "enum": [
                                                "Client",
                                                "CoClient"
                                            ],
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "premium": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "premiumFrequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Long Term Care Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Long Term Care Insurance Policy."
                    },
                    "404": {
                        "description": "Long Term Care Insurance Policy not found."
                    }
                },
                "tags": [
                    "LongTermCareInsurancePolicies"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Long Term Care Insurance Policy.<br />\r\n              Purpose: Allows for complete replacement of a Long Term Care Insurance Policy on a Fact Finder.",
                "operationId": "LongTermCareInsurancePolicies_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Long Term Care Insurance Policy ID used to identify which Long Term Care Insurance Policy to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {},
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Long Term Care Insurance Policy."
                    },
                    "403": {
                        "description": "Request is restricted for access to Long Term Care Insurance Policy."
                    },
                    "404": {
                        "description": "Long Term Care Insurance Policy not found."
                    }
                },
                "tags": [
                    "LongTermCareInsurancePolicies"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "benefitFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "premiumFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "benefit": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "benefitFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "insured": {
                                        "enum": [
                                            "Client",
                                            "CoClient"
                                        ],
                                        "type": "string"
                                    },
                                    "premium": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "premiumFrequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Long Term Care Insurance Policy to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/MajorPurchaseGoalTypes": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Major Purchase Goal Types for the specified country.<br />\r\n              Purpose: Provides access to the Major Purchase Goal Types including id and type description.",
                "operationId": "MajorPurchaseGoalTypes_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter Major Purchase Goal Types",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "majorPurchaseGoalTypes": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "majorPurchaseGoalTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "majorPurchaseGoalTypes": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "majorPurchaseGoalTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Major Purchase Goal Type not found."
                    }
                },
                "tags": [
                    "MajorPurchaseGoalTypes"
                ]
            }
        },
        "/api/MajorPurchaseGoalTypes/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves the Major Purchase Goal Type for the specified id.<br />\r\n              Purpose: Provides access to the Major Purchase Goal Types including id and type description.",
                "operationId": "MajorPurchaseGoalTypes_GetById",
                "parameters": [
                    {
                        "description": "The ID of Major Purchase Goal Type used to retreive the Major Purchase Goal Type information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoalTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoalTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "Major Purchase Goal Type not found."
                    }
                },
                "tags": [
                    "MajorPurchaseGoalTypes"
                ]
            }
        },
        "/api/MajorPurchaseGoals": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Major Purchases for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Major Purchases including description and amount.",
                "operationId": "MajorPurchaseGoals_GetMajorPurchaseGoalsByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Major Purchases",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "majorPurchaseGoals": {
                                            "items": {
                                                "properties": {
                                                    "amount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "majorPurchaseGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "majorPurchaseGoalTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "targetDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "majorPurchaseGoals": {
                                            "items": {
                                                "properties": {
                                                    "amount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "majorPurchaseGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "majorPurchaseGoalTypeId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "targetDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Major Purchase."
                    },
                    "403": {
                        "description": "Request is restricted for access to Major Purchase."
                    },
                    "404": {
                        "description": "Major Purchase not found."
                    }
                },
                "tags": [
                    "MajorPurchaseGoals"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Major Purchase.<br />\r\n              Purpose: Allows for creation of Major Purchases on a Fact Finder.",
                "operationId": "MajorPurchaseGoals_PostByModel",
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "majorPurchaseGoalTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "targetDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "majorPurchaseGoalTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "targetDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Major Purchase."
                    },
                    "403": {
                        "description": "Request is restricted for access to Major Purchase."
                    },
                    "404": {
                        "description": "Major Purchase not found."
                    }
                },
                "tags": [
                    "MajorPurchaseGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "majorPurchaseGoalTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "targetDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "majorPurchaseGoalTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "targetDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Major Purchase to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/MajorPurchaseGoals/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Major Purchase tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Major Purchase from a Fact Finder.",
                "operationId": "MajorPurchaseGoals_DeleteById",
                "parameters": [
                    {
                        "description": "The Major Purchase ID used to identify which Major Purchase to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Major Purchase."
                    },
                    "403": {
                        "description": "Request is restricted for access to Major Purchase."
                    },
                    "404": {
                        "description": "Major Purchase not found."
                    }
                },
                "tags": [
                    "MajorPurchaseGoals"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Major Purchase for the specified Major Purchase ID.<br />\r\n              Purpose: Provides access to the Major Purchase including description and amount.",
                "operationId": "MajorPurchaseGoals_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Major Purchase used to retreive the Major Purchase",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "majorPurchaseGoalTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "targetDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "majorPurchaseGoalTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "targetDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Major Purchase."
                    },
                    "403": {
                        "description": "Request is restricted for access to Major Purchase."
                    },
                    "404": {
                        "description": "Major Purchase not found."
                    }
                },
                "tags": [
                    "MajorPurchaseGoals"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Major Purchase.<br />\r\n              Purpose: Allows for complete replacement of a Major Purchase on a Fact Finder.",
                "operationId": "MajorPurchaseGoals_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Major Purchase ID used to identify which Major Purchase to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "majorPurchaseGoalTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "targetDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "majorPurchaseGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "majorPurchaseGoalTypeId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "targetDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Major Purchase."
                    },
                    "403": {
                        "description": "Request is restricted for access to Major Purchase."
                    },
                    "404": {
                        "description": "Major Purchase not found."
                    }
                },
                "tags": [
                    "MajorPurchaseGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "majorPurchaseGoalTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "targetDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "majorPurchaseGoalTypeId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "targetDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Major Purchase to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/RealEstateAssets": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Real Estate Assets for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Real Estate Assets including description and market value.",
                "operationId": "RealEstateAssets_GetRealEstateAssetsByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Real Estate Assets",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "realEstateAssets": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "purchaseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "purchaseDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "realEstateAssetId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "rentalIncome": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "realEstateAssets": {
                                            "items": {
                                                "properties": {
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "marketValue": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "owner": {
                                                        "enum": [
                                                            "Client",
                                                            "CoClient",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "purchaseAmount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "purchaseDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "realEstateAssetId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "rentalIncome": {
                                                        "format": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Real Estate Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Real Estate Asset."
                    },
                    "404": {
                        "description": "Real Estate Asset not found."
                    }
                },
                "tags": [
                    "RealEstateAssets"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Real Estate Asset.<br />\r\n              Purpose: Allows for creation of Real Estate Assets on a Fact Finder.",
                "operationId": "RealEstateAssets_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "realEstateAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "rentalIncome": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "realEstateAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "rentalIncome": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Real Estate Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Real Estate Asset."
                    },
                    "404": {
                        "description": "Real Estate Asset not found."
                    }
                },
                "tags": [
                    "RealEstateAssets"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "purchaseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "purchaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "rentalIncome": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "purchaseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "purchaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "rentalIncome": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Real Estate Asset to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/RealEstateAssets/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Real Estate Asset tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Real Estate Asset from a Fact Finder.",
                "operationId": "RealEstateAssets_DeleteById",
                "parameters": [
                    {
                        "description": "The Real Estate Asset ID used to identify which Real Estate Asset to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Real Estate Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Real Estate Asset."
                    },
                    "404": {
                        "description": "Real Estate Asset not found."
                    }
                },
                "tags": [
                    "RealEstateAssets"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Real Estate Asset for the specified Real Estate Asset ID.<br />\r\n              Purpose: Provides access to the Real Estate Asset including description and market value.",
                "operationId": "RealEstateAssets_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Real Estate Asset used to retreive the Real Estate Asset",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "realEstateAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "rentalIncome": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "realEstateAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "rentalIncome": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Real Estate Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Real Estate Asset."
                    },
                    "404": {
                        "description": "Real Estate Asset not found."
                    }
                },
                "tags": [
                    "RealEstateAssets"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Real Estate Asset.<br />\r\n              Purpose: Allows for complete replacement of a Real Estate Asset on a Fact Finder.",
                "operationId": "RealEstateAssets_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Real Estate Asset ID used to identify which Real Estate Asset to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "realEstateAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "rentalIncome": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "description": {
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "marketValue": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "owner": {
                                            "enum": [
                                                "Client",
                                                "CoClient",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "purchaseAmount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "purchaseDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "realEstateAssetId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "rentalIncome": {
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Real Estate Asset."
                    },
                    "403": {
                        "description": "Request is restricted for access to Real Estate Asset."
                    },
                    "404": {
                        "description": "Real Estate Asset not found."
                    }
                },
                "tags": [
                    "RealEstateAssets"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "purchaseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "purchaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "rentalIncome": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "marketValue": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "owner": {
                                        "enum": [
                                            "Client",
                                            "CoClient",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "purchaseAmount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "purchaseDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "rentalIncome": {
                                        "format": "double",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "factFinderId",
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Real Estate Asset to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/RetirementGoals": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Retirement Goals for the specified Fact Finder ID.<br />\r\n              Purpose: Provides access to the Retirement Goals including retirement date.",
                "operationId": "RetirementGoals_GetRetirementGoalsByFactFinderIdByFactfinderid",
                "parameters": [
                    {
                        "description": "The ID of the Fact Finder used to retrieve Retirement Goals",
                        "in": "query",
                        "name": "factFinderId",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "retirementGoals": {
                                            "items": {
                                                "properties": {
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "head1RetirementDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "head2RetirementDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "retirementGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "retirementGoals": {
                                            "items": {
                                                "properties": {
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "head1RetirementDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "head2RetirementDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "retirementGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal."
                    },
                    "404": {
                        "description": "Retirement Goal not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Retirement Goal.<br />\r\n              Purpose: Allows for creation of Retirement Goals on a Fact Finder.",
                "operationId": "RetirementGoals_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "head2RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "head2RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal."
                    },
                    "404": {
                        "description": "Retirement Goal not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "head1RetirementDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "head2RetirementDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "head1RetirementDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "head2RetirementDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Retirement Goal to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/RetirementGoals/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Retirement Goal tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Retirement Goal from a Fact Finder.",
                "operationId": "RetirementGoals_DeleteById",
                "parameters": [
                    {
                        "description": "The Retirement Goal ID used to identify which Retirement Goal to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal."
                    },
                    "404": {
                        "description": "Retirement Goal not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Retirement Goal for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides access to the Retirement Goal including retirement date.",
                "operationId": "RetirementGoals_GetById",
                "parameters": [
                    {
                        "description": "The ID of the Retirement Goal used to retreive the Retirement Goal",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "head2RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "head2RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal."
                    },
                    "404": {
                        "description": "Retirement Goal not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Retirement Goal.<br />\r\n              Purpose: Allows for complete replacement of a Retirement Goal on a Fact Finder.",
                "operationId": "RetirementGoals_PutByIdModel",
                "parameters": [
                    {
                        "description": "The existing Retirement Goal ID used to identify which Retirement Goal to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "head2RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "head1RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "head2RetirementDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal."
                    },
                    "404": {
                        "description": "Retirement Goal not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "head1RetirementDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "head2RetirementDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "factFinderId": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "head1RetirementDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "head2RetirementDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "factFinderId"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Retirement Goal to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/RetirementGoals/{retirementGoalId}/Expenses": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Retirement Goal Expenses for the specified Retirement Goal ID.<br />\r\n              Purpose: Provides access to the Retirement Goal Expenses including description and amount.",
                "operationId": "RetirementGoals_GetRetirementExpensesByRetirementGoalIdByRetirementgoalid",
                "parameters": [
                    {
                        "description": "The ID of the Retirement Goal used to retrieve Retirement Goal Expenses",
                        "in": "path",
                        "name": "retirementGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "retirementExpenses": {
                                            "items": {
                                                "properties": {
                                                    "amount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "annualPeriod": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "retirementExpenseId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "retirementGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "retirementExpenses": {
                                            "items": {
                                                "properties": {
                                                    "amount": {
                                                        "format": "double",
                                                        "type": "number"
                                                    },
                                                    "annualPeriod": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "endDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalDestinationId": {
                                                        "type": "string"
                                                    },
                                                    "frequency": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "member": {
                                                        "enum": [
                                                            "Head1",
                                                            "Head2",
                                                            "Joint"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "retirementExpenseId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "retirementGoalId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "startDate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal Expense."
                    },
                    "404": {
                        "description": "Retirement Goal Expense not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Retirement Goal Expense.<br />\r\n              Purpose: Allows for creation of Retirement Goal Expenses on a Fact Finder.",
                "operationId": "RetirementGoals_PostByRetirementgoalidModel",
                "parameters": [
                    {
                        "description": "The ID of the Retirement Goal to add the Retirement Goal Expense to",
                        "in": "path",
                        "name": "retirementGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "retirementExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "retirementExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal Expense."
                    },
                    "404": {
                        "description": "Retirement Goal Expense not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "annualPeriod": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "annualPeriod": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Retirement Goal Expense to be added to the Fact Finder",
                    "required": true
                }
            }
        },
        "/api/RetirementGoals/{retirementGoalId}/Expenses/{id}": {
            "delete": {
                "deprecated": false,
                "description": "Description: The operation removes a Retirement Goal Expense tied to a Fact Finder.<br />\r\n              Purpose: Allows for removal of a Retirement Goal Expense from a Fact Finder.",
                "operationId": "RetirementGoals_DeleteByRetirementgoalidId",
                "parameters": [
                    {
                        "description": "The Retirement Goal ID used to locate the Goal to delete the Retirement Goal Expense under",
                        "in": "path",
                        "name": "retirementGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The Retirement Goal Expense ID used to identify which Retirement Goal Expense to remove",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal Expense."
                    },
                    "404": {
                        "description": "Retirement Goal Expense not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ]
            },
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Retirement Goal Expense for the specified Retirement Goal Expense ID.<br />\r\n              Purpose: Provides access to the Retirement Goal Expense including description and amount.",
                "operationId": "RetirementGoals_GetRetirementExpenseByRetirementgoalidId",
                "parameters": [
                    {
                        "description": "The ID of the Retirement Goal used to retrieve the Retirement Goal Expense",
                        "in": "path",
                        "name": "retirementGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The ID of the Retirement Goal Expense used to retreive the Retirement Goal Expense",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "retirementExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "retirementExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal Expense."
                    },
                    "404": {
                        "description": "Retirement Goal Expense not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ]
            },
            "put": {
                "deprecated": false,
                "description": "Description: The operation updates a Retirement Goal Expense.<br />\r\n              Purpose: Allows for complete replacement of a Retirement Goal Expense on a Fact Finder.",
                "operationId": "RetirementGoals_PutByRetirementgoalidIdModel",
                "parameters": [
                    {
                        "description": "The Retirement Goal ID used to locate the Goal to update the Retirement Goal Expense under",
                        "in": "path",
                        "name": "retirementGoalId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "description": "The existing Retirement Goal Expense ID used to identify which Retirement Goal Expense to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "retirementExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "retirementExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to Retirement Goal Expense."
                    },
                    "403": {
                        "description": "Request is restricted for access to Retirement Goal Expense."
                    },
                    "404": {
                        "description": "Retirement Goal Expense not found."
                    }
                },
                "tags": [
                    "RetirementGoals"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "annualPeriod": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "description"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "annualPeriod": {
                                        "format": "int32",
                                        "maximum": 99,
                                        "minimum": 1,
                                        "type": "integer"
                                    },
                                    "description": {
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "endDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "maxLength": 64,
                                        "minLength": 0,
                                        "type": "string"
                                    },
                                    "frequency": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "member": {
                                        "enum": [
                                            "Head1",
                                            "Head2",
                                            "Joint"
                                        ],
                                        "type": "string"
                                    },
                                    "startDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "description"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Retirement Goal Expense to be updated on a Fact Finder",
                    "required": true
                }
            }
        },
        "/api/ServiceInformation": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves information statistics for the current service.<br />\r\n              Purpose: Provides access to Service Information.",
                "operationId": "FactFinderServiceInformation_Get",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "schemaVersion": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "serviceVersion": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "schemaVersion": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "serviceVersion": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object not found"
                    }
                },
                "tags": [
                    "FactFinderServiceInformation"
                ]
            }
        },
        "/api/StatesProvinces": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all States and Provinces for the specified country.<br />\r\n              Purpose: Provides access to the States and Provinces.",
                "operationId": "StatesProvinces_GetByCountry",
                "parameters": [
                    {
                        "description": "The country used to filter States and Provinces",
                        "in": "query",
                        "name": "country",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnitedStates",
                                "Canada"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "statesProvinces": {
                                            "items": {
                                                "properties": {
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "stateProvinceId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "stateProvinceName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "statesProvinces": {
                                            "items": {
                                                "properties": {
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "stateProvinceId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "stateProvinceName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "State or Province not found."
                    }
                },
                "tags": [
                    "StatesProvinces"
                ]
            }
        },
        "/api/StatesProvinces/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves the States and Provinces for the specified id.<br />\r\n              Purpose: Provides access to the States and Provinces.",
                "operationId": "StatesProvinces_GetById",
                "parameters": [
                    {
                        "description": "The ID of the State or Province used to retreive the State or Province information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "stateProvinceId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "stateProvinceName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "stateProvinceId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "stateProvinceName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "404": {
                        "description": "State or Province not found."
                    }
                },
                "tags": [
                    "StatesProvinces"
                ]
            }
        },
        "/api/Users": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Fact Finder User.<br />\r\n              Purpose: Provides access to a Fact Finder User information including the User ID.",
                "operationId": "Users_GetByUsername",
                "parameters": [
                    {
                        "description": "The username used to look up the Fact Finder User information",
                        "in": "query",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "userGuid": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "userGuid": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to User."
                    },
                    "403": {
                        "description": "Request is restricted for access to User."
                    },
                    "404": {
                        "description": "User not found."
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "deprecated": false,
                "description": "Description: The operation creates a Fact Finder User.<br />\r\n              Purpose: Allows for creation of Users to collect Fact Finder information.",
                "operationId": "Users_PostByModel",
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "userGuid": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "userGuid": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to User."
                    },
                    "403": {
                        "description": "Request is restricted for access to User."
                    },
                    "404": {
                        "description": "User not found."
                    }
                },
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "userGuid": {
                                        "type": "string"
                                    },
                                    "userName": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userName",
                                    "userGuid"
                                ],
                                "type": "object"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "properties": {
                                    "userGuid": {
                                        "type": "string"
                                    },
                                    "userName": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "userName",
                                    "userGuid"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "description": "The Fact Finder User to be added",
                    "required": true
                }
            }
        },
        "/api/Users/{advisorGuid}/ClientFactFinders": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Fact Finders related to the specified Advisor's Clients.<br />\r\n              Purpose: Provides access to a Client Fact Finder listing.",
                "operationId": "Users_GetFactFindersByAdvisorGuidByAdvisorguid",
                "parameters": [
                    {
                        "description": "The Advisor Guid used to locate related Clients and then those Client's Fact Finders",
                        "in": "path",
                        "name": "advisorGuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "factFinderWithUserGuids": {
                                            "items": {
                                                "properties": {
                                                    "countryCode": {
                                                        "enum": [
                                                            "UnitedStates",
                                                            "Canada"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "created": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalId": {
                                                        "type": "string"
                                                    },
                                                    "externalSystem": {
                                                        "enum": [
                                                            "Naviplan"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "factFinderUserId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastStatusUpdate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "modules": {
                                                        "properties": {
                                                            "factFinderModules": {
                                                                "items": {
                                                                    "properties": {
                                                                        "available": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "factFinderId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "links": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "href": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "rel": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "moduleId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "moduleName": {
                                                                            "enum": [
                                                                                "Demographics",
                                                                                "Assets",
                                                                                "Liabilities",
                                                                                "Incomes",
                                                                                "Expenses",
                                                                                "Insurance",
                                                                                "Retirement",
                                                                                "Education",
                                                                                "MajorPurchase"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "visited": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "New",
                                                            "InProgress",
                                                            "ClientSubmitted",
                                                            "AdvisorAccepted"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "userGuid": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "factFinderWithUserGuids": {
                                            "items": {
                                                "properties": {
                                                    "countryCode": {
                                                        "enum": [
                                                            "UnitedStates",
                                                            "Canada"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "created": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalId": {
                                                        "type": "string"
                                                    },
                                                    "externalSystem": {
                                                        "enum": [
                                                            "Naviplan"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "factFinderUserId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastStatusUpdate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "modules": {
                                                        "properties": {
                                                            "factFinderModules": {
                                                                "items": {
                                                                    "properties": {
                                                                        "available": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "factFinderId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "links": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "href": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "rel": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "moduleId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "moduleName": {
                                                                            "enum": [
                                                                                "Demographics",
                                                                                "Assets",
                                                                                "Liabilities",
                                                                                "Incomes",
                                                                                "Expenses",
                                                                                "Insurance",
                                                                                "Retirement",
                                                                                "Education",
                                                                                "MajorPurchase"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "visited": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "New",
                                                            "InProgress",
                                                            "ClientSubmitted",
                                                            "AdvisorAccepted"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "userGuid": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to User."
                    },
                    "403": {
                        "description": "Request is restricted for access to User."
                    },
                    "404": {
                        "description": "User not found."
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/Users/{advisorGuid}/ClientFactFinders/{clientGuid}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a list of Fact Finders related to the specified Advisor's Client.<br />\r\n              Purpose: Provides access to a Client's Fact Finders.",
                "operationId": "Users_GetFactFinderByUserGuidByAdvisorguidClientguid",
                "parameters": [
                    {
                        "description": "The Advisor Guid used to locate related Clients",
                        "in": "path",
                        "name": "advisorGuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The Client Guid used to locate related Fact Finders",
                        "in": "path",
                        "name": "clientGuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "factFinderWithUserGuids": {
                                            "items": {
                                                "properties": {
                                                    "countryCode": {
                                                        "enum": [
                                                            "UnitedStates",
                                                            "Canada"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "created": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalId": {
                                                        "type": "string"
                                                    },
                                                    "externalSystem": {
                                                        "enum": [
                                                            "Naviplan"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "factFinderUserId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastStatusUpdate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "modules": {
                                                        "properties": {
                                                            "factFinderModules": {
                                                                "items": {
                                                                    "properties": {
                                                                        "available": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "factFinderId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "links": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "href": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "rel": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "moduleId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "moduleName": {
                                                                            "enum": [
                                                                                "Demographics",
                                                                                "Assets",
                                                                                "Liabilities",
                                                                                "Incomes",
                                                                                "Expenses",
                                                                                "Insurance",
                                                                                "Retirement",
                                                                                "Education",
                                                                                "MajorPurchase"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "visited": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "New",
                                                            "InProgress",
                                                            "ClientSubmitted",
                                                            "AdvisorAccepted"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "userGuid": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "factFinderWithUserGuids": {
                                            "items": {
                                                "properties": {
                                                    "countryCode": {
                                                        "enum": [
                                                            "UnitedStates",
                                                            "Canada"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "created": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalId": {
                                                        "type": "string"
                                                    },
                                                    "externalSystem": {
                                                        "enum": [
                                                            "Naviplan"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "factFinderUserId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastStatusUpdate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "modules": {
                                                        "properties": {
                                                            "factFinderModules": {
                                                                "items": {
                                                                    "properties": {
                                                                        "available": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "factFinderId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "links": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "href": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "rel": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "moduleId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "moduleName": {
                                                                            "enum": [
                                                                                "Demographics",
                                                                                "Assets",
                                                                                "Liabilities",
                                                                                "Incomes",
                                                                                "Expenses",
                                                                                "Insurance",
                                                                                "Retirement",
                                                                                "Education",
                                                                                "MajorPurchase"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "visited": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "New",
                                                            "InProgress",
                                                            "ClientSubmitted",
                                                            "AdvisorAccepted"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "userGuid": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to User."
                    },
                    "403": {
                        "description": "Request is restricted for access to User."
                    },
                    "404": {
                        "description": "User not found."
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/Users/{id}": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves a single Fact Finder User.<br />\r\n              Purpose: Provides access to a Fact Finder User information including the username.",
                "operationId": "Users_GetById",
                "parameters": [
                    {
                        "description": "The User ID used to look up the Fact Finder User information",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "userGuid": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "email": {
                                            "type": "string"
                                        },
                                        "factFinderUserId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "userGuid": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to User."
                    },
                    "404": {
                        "description": "User not found."
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        },
        "/api/Users/{username}/FactFinders": {
            "get": {
                "deprecated": false,
                "description": "Description: This operation retrieves all Fact Finders for the specified username.<br />\r\n              Purpose: Provides access to the Fact Finder listing including status.",
                "operationId": "Users_GetFactFindersByUserNameByUsername",
                "parameters": [
                    {
                        "description": "The username used to filter Fact Finders",
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "factFinderWithUserNames": {
                                            "items": {
                                                "properties": {
                                                    "countryCode": {
                                                        "enum": [
                                                            "UnitedStates",
                                                            "Canada"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "created": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalId": {
                                                        "type": "string"
                                                    },
                                                    "externalSystem": {
                                                        "enum": [
                                                            "Naviplan"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "factFinderUserId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastStatusUpdate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "modules": {
                                                        "properties": {
                                                            "factFinderModules": {
                                                                "items": {
                                                                    "properties": {
                                                                        "available": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "factFinderId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "links": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "href": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "rel": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "moduleId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "moduleName": {
                                                                            "enum": [
                                                                                "Demographics",
                                                                                "Assets",
                                                                                "Liabilities",
                                                                                "Incomes",
                                                                                "Expenses",
                                                                                "Insurance",
                                                                                "Retirement",
                                                                                "Education",
                                                                                "MajorPurchase"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "visited": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "New",
                                                            "InProgress",
                                                            "ClientSubmitted",
                                                            "AdvisorAccepted"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "userName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "properties": {
                                        "factFinderWithUserNames": {
                                            "items": {
                                                "properties": {
                                                    "countryCode": {
                                                        "enum": [
                                                            "UnitedStates",
                                                            "Canada"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "created": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "externalId": {
                                                        "type": "string"
                                                    },
                                                    "externalSystem": {
                                                        "enum": [
                                                            "Naviplan"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "factFinderUserId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "lastStatusUpdate": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "modules": {
                                                        "properties": {
                                                            "factFinderModules": {
                                                                "items": {
                                                                    "properties": {
                                                                        "available": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "factFinderId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "links": {
                                                                            "items": {
                                                                                "properties": {
                                                                                    "href": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "rel": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "moduleId": {
                                                                            "format": "int32",
                                                                            "type": "integer"
                                                                        },
                                                                        "moduleName": {
                                                                            "enum": [
                                                                                "Demographics",
                                                                                "Assets",
                                                                                "Liabilities",
                                                                                "Incomes",
                                                                                "Expenses",
                                                                                "Insurance",
                                                                                "Retirement",
                                                                                "Education",
                                                                                "MajorPurchase"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "visited": {
                                                                            "type": "boolean"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "New",
                                                            "InProgress",
                                                            "ClientSubmitted",
                                                            "AdvisorAccepted"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "userName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Request is unauthorized for access to User."
                    },
                    "403": {
                        "description": "Request is restricted for access to User."
                    },
                    "404": {
                        "description": "User not found."
                    }
                },
                "tags": [
                    "Users"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Advicent.DomainLogic.Models.IAccountHoldingDomainObject": {
                "properties": {
                    "accountHoldingId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accountId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "costBasis": {
                        "format": "double",
                        "type": "number"
                    },
                    "cusip": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "heldAway": {
                        "type": "boolean"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "symbol": {
                        "type": "string"
                    },
                    "valuationDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IAccountWithHoldingsDomainObject": {
                "properties": {
                    "accountHoldings": {
                        "items": {
                            "properties": {
                                "accountHoldingId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "accountId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "costBasis": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "cusip": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "heldAway": {
                                    "type": "boolean"
                                },
                                "marketValue": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "symbol": {
                                    "type": "string"
                                },
                                "valuationDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "accountId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accountType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "externalSourceId": {
                        "type": "string"
                    },
                    "externalSourceName": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint",
                            "FamilyMember",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "ownerDependentId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.ICriticalIllnessInsurancePolicyDomainObject": {
                "properties": {
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "criticalIllnessInsurancePolicyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "policyType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IDemographicsDependentDomainObject": {
                "properties": {
                    "birthDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "demographicsId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dependentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dependentOf": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "relationship": {
                        "enum": [
                            "Son",
                            "Daughter",
                            "FosterSon",
                            "FosterDaughter",
                            "Grandson",
                            "Granddaughter",
                            "Nephew",
                            "Niece",
                            "MaleCousin",
                            "FemaleCousin",
                            "Father",
                            "Mother",
                            "Grandfather",
                            "Grandmother",
                            "Uncle",
                            "Aunt",
                            "Brother",
                            "Sister",
                            "SonInLaw",
                            "DaughterInLaw",
                            "MaleOther",
                            "FemaleOther"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IDemographicsWithDependentsDomainObject": {
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "demographicsId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dependents": {
                        "items": {
                            "properties": {
                                "birthDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "demographicsId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "dependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "dependentOf": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "relationship": {
                                    "enum": [
                                        "Son",
                                        "Daughter",
                                        "FosterSon",
                                        "FosterDaughter",
                                        "Grandson",
                                        "Granddaughter",
                                        "Nephew",
                                        "Niece",
                                        "MaleCousin",
                                        "FemaleCousin",
                                        "Father",
                                        "Mother",
                                        "Grandfather",
                                        "Grandmother",
                                        "Uncle",
                                        "Aunt",
                                        "Brother",
                                        "Sister",
                                        "SonInLaw",
                                        "DaughterInLaw",
                                        "MaleOther",
                                        "FemaleOther"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "externalSourceId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "head1": {
                        "properties": {
                            "alreadyRetired": {
                                "type": "boolean"
                            },
                            "birthDate": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "externalDestinationId": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "gender": {
                                "enum": [
                                    "Male",
                                    "Female"
                                ],
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "taxFilingStatus": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "head2": {
                        "properties": {
                            "alreadyRetired": {
                                "type": "boolean"
                            },
                            "birthDate": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "externalDestinationId": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "gender": {
                                "enum": [
                                    "Male",
                                    "Female"
                                ],
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "taxFilingStatus": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "jointAnalysis": {
                        "type": "boolean"
                    },
                    "lockRetirement": {
                        "type": "boolean"
                    },
                    "state": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IDisabilityInsurancePolicyDomainObject": {
                "properties": {
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "benefitFrequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "disabilityInsurancePolicyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "policyType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    },
                    "premiumFrequency": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IEducationExpenseDomainObject": {
                "properties": {
                    "annualCost": {
                        "format": "double",
                        "type": "number"
                    },
                    "educationExpenseId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "educationGoalId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Dependent"
                        ],
                        "type": "string"
                    },
                    "memberDependentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startYear": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "years": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IEducationGoalWithExpensesDomainObject": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "educationExpenses": {
                        "items": {
                            "properties": {
                                "annualCost": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "educationExpenseId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "educationGoalId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Dependent"
                                    ],
                                    "type": "string"
                                },
                                "memberDependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "startYear": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "years": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "educationGoalId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "projectedCost": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IExpenseDomainObject": {
                "properties": {
                    "annualPeriod": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "expenseAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "expenseId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "expenseTypeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IFactFinderDefinedBenefitPensionDomainObject": {
                "properties": {
                    "definedBenefitPensionId": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "description": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "estimatedAmount": {
                        "format": "double",
                        "readOnly": true,
                        "type": "number"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "member": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "readOnly": true,
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IFactFinderLiabilityDomainObject": {
                "properties": {
                    "balance": {
                        "format": "double",
                        "type": "number"
                    },
                    "balanceAsOfDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "externalSourceId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "importSource": {
                        "type": "string"
                    },
                    "interestRate": {
                        "format": "double",
                        "type": "number"
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "liabilityId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "liabilityType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "loanDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "originalPrincipal": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "payment": {
                        "format": "double",
                        "type": "number"
                    },
                    "paymentType": {
                        "enum": [
                            "InterestOnly",
                            "PrincipalAndInterest",
                            "SetPrincipal",
                            "LastPeriod"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IFactFinderLifestyleAssetDomainObject": {
                "properties": {
                    "description": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "lifestyleAssetId": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "marketValue": {
                        "format": "double",
                        "readOnly": true,
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint"
                        ],
                        "readOnly": true,
                        "type": "string"
                    },
                    "purchaseAmount": {
                        "format": "double",
                        "readOnly": true,
                        "type": "number"
                    },
                    "purchaseDate": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IFamilyHeadDomainObject": {
                "properties": {
                    "alreadyRetired": {
                        "type": "boolean"
                    },
                    "birthDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "gender": {
                        "enum": [
                            "Male",
                            "Female"
                        ],
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "taxFilingStatus": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IIncomeDomainObject": {
                "properties": {
                    "annualAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "incomeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "incomeTypeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.ILifeInsurancePolicyDomainObject": {
                "properties": {
                    "beneficiary": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Dependent",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "beneficiaryDependentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "FirstToDie",
                            "SecondToDie",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "lifeInsurancePolicyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "payer": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "policyType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.ILongTermCareInsurancePolicyDomainObject": {
                "properties": {
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "benefitFrequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "longTermCareInsurancePolicyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    },
                    "premiumFrequency": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IMajorPurchaseGoalDomainObject": {
                "properties": {
                    "amount": {
                        "format": "double",
                        "readOnly": true,
                        "type": "number"
                    },
                    "description": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "majorPurchaseGoalId": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "majorPurchaseGoalTypeId": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint"
                        ],
                        "readOnly": true,
                        "type": "string"
                    },
                    "targetDate": {
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IRealEstateAssetDomainObject": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "purchaseAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "purchaseDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "realEstateAssetId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rentalIncome": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IRetirementExpenseDomainObject": {
                "properties": {
                    "amount": {
                        "format": "double",
                        "type": "number"
                    },
                    "annualPeriod": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "retirementExpenseId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "retirementGoalId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.DomainLogic.Models.IRetirementGoalWithExpensesDomainObject": {
                "properties": {
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "head1RetirementDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "head2RetirementDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "retirementExpenses": {
                        "items": {
                            "properties": {
                                "amount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "annualPeriod": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "endDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "retirementExpenseId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "retirementGoalId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "startDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "retirementGoalId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.AccountHoldingModel": {
                "properties": {
                    "costBasis": {
                        "format": "double",
                        "type": "number"
                    },
                    "cusip": {
                        "maxLength": 31,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "symbol": {
                        "maxLength": 31,
                        "minLength": 0,
                        "type": "string"
                    },
                    "valuationDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.AccountHoldingWithIdModel": {
                "properties": {
                    "accountHoldingId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accountId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "costBasis": {
                        "format": "double",
                        "type": "number"
                    },
                    "cusip": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "symbol": {
                        "type": "string"
                    },
                    "valuationDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.AccountModel": {
                "properties": {
                    "accountType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalSourceId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalSourceName": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "holdings": {
                        "items": {
                            "properties": {
                                "costBasis": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "cusip": {
                                    "maxLength": 31,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "description": {
                                    "maxLength": 255,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "maxLength": 64,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "marketValue": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "symbol": {
                                    "maxLength": 31,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "valuationDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "description"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint",
                            "FamilyMember",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "ownerDependentId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.AccountTypeModel": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.AccountTypesModel": {
                "properties": {
                    "accountTypes": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.AccountWithIdModel": {
                "properties": {
                    "accountId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "accountType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "externalSourceId": {
                        "type": "string"
                    },
                    "externalSourceName": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint",
                            "FamilyMember",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "ownerDependentId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.AccountsModel": {
                "properties": {
                    "accounts": {
                        "items": {
                            "properties": {
                                "accountId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "accountType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "externalSourceId": {
                                    "type": "string"
                                },
                                "externalSourceName": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "lastUpdated": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "marketValue": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "owner": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint",
                                        "FamilyMember",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "ownerDependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.ClientModel": {
                "properties": {
                    "clientId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "ownerUser": {
                        "type": "string"
                    },
                    "planId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "success": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.ClientsModel": {
                "properties": {
                    "externalDestinationName": {
                        "maxLength": 49,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalSystem": {
                        "enum": [
                            "Naviplan"
                        ],
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "planAction": {
                        "enum": [
                            "New",
                            "Duplicate",
                            "Project"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "factFinderId",
                    "externalSystem",
                    "planAction"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.CriticalIllnessInsurancePoliciesModel": {
                "properties": {
                    "criticalIllnessInsurancePolicies": {
                        "items": {
                            "properties": {
                                "benefit": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insurancePolicyId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insured": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "policyType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "premium": {
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyModel": {
                "properties": {
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "policyType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyTypeModel": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyTypesModel": {
                "properties": {
                    "insurancePolicyTypes": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.CriticalIllnessInsurancePolicyWithIdModel": {
                "properties": {
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insurancePolicyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "policyType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DefinedBenefitPensionModel": {
                "properties": {
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "estimatedAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "member": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DefinedBenefitPensionWithIdModel": {
                "properties": {
                    "definedBenefitPensionId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "estimatedAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "member": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DefinedBenefitPensionsModel": {
                "properties": {
                    "definedBenefitPensions": {
                        "items": {
                            "properties": {
                                "definedBenefitPensionId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "estimatedAmount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "member": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "type": "string"
                                },
                                "startDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DemographicsDependentModel": {
                "properties": {
                    "birthDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "dependentOf": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "firstName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "lastName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "relationship": {
                        "enum": [
                            "Son",
                            "Daughter",
                            "FosterSon",
                            "FosterDaughter",
                            "Grandson",
                            "Granddaughter",
                            "Nephew",
                            "Niece",
                            "MaleCousin",
                            "FemaleCousin",
                            "Father",
                            "Mother",
                            "Grandfather",
                            "Grandmother",
                            "Uncle",
                            "Aunt",
                            "Brother",
                            "Sister",
                            "SonInLaw",
                            "DaughterInLaw",
                            "MaleOther",
                            "FemaleOther"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "birthDate",
                    "relationship",
                    "dependentOf"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DemographicsDependentWithIdModel": {
                "properties": {
                    "birthDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "demographicsId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dependentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "dependentOf": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "relationship": {
                        "enum": [
                            "Son",
                            "Daughter",
                            "FosterSon",
                            "FosterDaughter",
                            "Grandson",
                            "Granddaughter",
                            "Nephew",
                            "Niece",
                            "MaleCousin",
                            "FemaleCousin",
                            "Father",
                            "Mother",
                            "Grandfather",
                            "Grandmother",
                            "Uncle",
                            "Aunt",
                            "Brother",
                            "Sister",
                            "SonInLaw",
                            "DaughterInLaw",
                            "MaleOther",
                            "FemaleOther"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DemographicsDependentsModel": {
                "properties": {
                    "dependents": {
                        "items": {
                            "properties": {
                                "birthDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "demographicsId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "dependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "dependentOf": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "firstName": {
                                    "type": "string"
                                },
                                "lastName": {
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "relationship": {
                                    "enum": [
                                        "Son",
                                        "Daughter",
                                        "FosterSon",
                                        "FosterDaughter",
                                        "Grandson",
                                        "Granddaughter",
                                        "Nephew",
                                        "Niece",
                                        "MaleCousin",
                                        "FemaleCousin",
                                        "Father",
                                        "Mother",
                                        "Grandfather",
                                        "Grandmother",
                                        "Uncle",
                                        "Aunt",
                                        "Brother",
                                        "Sister",
                                        "SonInLaw",
                                        "DaughterInLaw",
                                        "MaleOther",
                                        "FemaleOther"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DemographicsModel": {
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalSourceId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "head1": {
                        "properties": {
                            "alreadyRetired": {
                                "type": "boolean"
                            },
                            "birthDate": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "externalDestinationId": {
                                "type": "string"
                            },
                            "firstName": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string"
                            },
                            "gender": {
                                "enum": [
                                    "Male",
                                    "Female"
                                ],
                                "type": "string"
                            },
                            "lastName": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string"
                            },
                            "taxFilingStatus": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "firstName",
                            "lastName",
                            "birthDate",
                            "gender",
                            "taxFilingStatus",
                            "alreadyRetired"
                        ],
                        "type": "object"
                    },
                    "head2": {
                        "properties": {
                            "alreadyRetired": {
                                "type": "boolean"
                            },
                            "birthDate": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "externalDestinationId": {
                                "type": "string"
                            },
                            "firstName": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string"
                            },
                            "gender": {
                                "enum": [
                                    "Male",
                                    "Female"
                                ],
                                "type": "string"
                            },
                            "lastName": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string"
                            },
                            "taxFilingStatus": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "firstName",
                            "lastName",
                            "birthDate",
                            "gender",
                            "taxFilingStatus",
                            "alreadyRetired"
                        ],
                        "type": "object"
                    },
                    "jointAnalysis": {
                        "type": "boolean"
                    },
                    "state": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "jointAnalysis",
                    "head1",
                    "factFinderId",
                    "city",
                    "state"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DemographicsWithIdModel": {
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "demographicsId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "externalSourceId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "head1": {
                        "properties": {
                            "alreadyRetired": {
                                "type": "boolean"
                            },
                            "birthDate": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "externalDestinationId": {
                                "type": "string"
                            },
                            "firstName": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string"
                            },
                            "gender": {
                                "enum": [
                                    "Male",
                                    "Female"
                                ],
                                "type": "string"
                            },
                            "lastName": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string"
                            },
                            "taxFilingStatus": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "firstName",
                            "lastName",
                            "birthDate",
                            "gender",
                            "taxFilingStatus",
                            "alreadyRetired"
                        ],
                        "type": "object"
                    },
                    "head2": {
                        "properties": {
                            "alreadyRetired": {
                                "type": "boolean"
                            },
                            "birthDate": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "externalDestinationId": {
                                "type": "string"
                            },
                            "firstName": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string"
                            },
                            "gender": {
                                "enum": [
                                    "Male",
                                    "Female"
                                ],
                                "type": "string"
                            },
                            "lastName": {
                                "maxLength": 255,
                                "minLength": 0,
                                "type": "string"
                            },
                            "taxFilingStatus": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "firstName",
                            "lastName",
                            "birthDate",
                            "gender",
                            "taxFilingStatus",
                            "alreadyRetired"
                        ],
                        "type": "object"
                    },
                    "jointAnalysis": {
                        "type": "boolean"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "lockRetirement": {
                        "type": "boolean"
                    },
                    "state": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DisabilityInsurancePoliciesModel": {
                "properties": {
                    "disabilityInsurancePolicies": {
                        "items": {
                            "properties": {
                                "benefit": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "benefitFrequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insurancePolicyId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insured": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "policyType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "premium": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "premiumFrequency": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DisabilityInsurancePolicyModel": {
                "properties": {
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "benefitFrequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "policyType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    },
                    "premiumFrequency": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DisabilityInsurancePolicyTypeModel": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DisabilityInsurancePolicyTypesModel": {
                "properties": {
                    "insurancePolicyTypes": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.DisabilityInsurancePolicyWithIdModel": {
                "properties": {
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "benefitFrequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insurancePolicyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "policyType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    },
                    "premiumFrequency": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.EducationExpenseModel": {
                "properties": {
                    "annualCost": {
                        "format": "double",
                        "type": "number"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Dependent"
                        ],
                        "type": "string"
                    },
                    "memberDependentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startYear": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "years": {
                        "format": "int32",
                        "maximum": 99,
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.EducationExpenseWithIdModel": {
                "properties": {
                    "annualCost": {
                        "format": "double",
                        "type": "number"
                    },
                    "educationExpenseId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "educationGoalId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Dependent"
                        ],
                        "type": "string"
                    },
                    "memberDependentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startYear": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "years": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.EducationExpensesModel": {
                "properties": {
                    "educationExpenses": {
                        "items": {
                            "properties": {
                                "annualCost": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "educationExpenseId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "educationGoalId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Dependent"
                                    ],
                                    "type": "string"
                                },
                                "memberDependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "startYear": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "years": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.EducationGoalModel": {
                "properties": {
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "projectedCost": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.EducationGoalWithIdModel": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "educationGoalId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "projectedCost": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.EducationGoalsModel": {
                "properties": {
                    "educationGoals": {
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "educationGoalId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "projectedCost": {
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.ExpenseModel": {
                "properties": {
                    "annualPeriod": {
                        "format": "int32",
                        "maximum": 99,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "expenseAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "expenseTypeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.ExpenseTypeModel": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.ExpenseTypesModel": {
                "properties": {
                    "expenseTypes": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.ExpenseWithIdModel": {
                "properties": {
                    "annualPeriod": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "expenseAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "expenseId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "expenseTypeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.ExpensesModel": {
                "properties": {
                    "expenses": {
                        "items": {
                            "properties": {
                                "annualPeriod": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "endDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "expenseAmount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "expenseId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "expenseTypeId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "startDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderModel": {
                "properties": {
                    "countryCode": {
                        "enum": [
                            "UnitedStates",
                            "Canada"
                        ],
                        "type": "string"
                    },
                    "factFinderUserId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "modules": {
                        "items": {
                            "properties": {
                                "available": {
                                    "type": "boolean"
                                },
                                "moduleName": {
                                    "enum": [
                                        "Demographics",
                                        "Assets",
                                        "Liabilities",
                                        "Incomes",
                                        "Expenses",
                                        "Insurance",
                                        "Retirement",
                                        "Education",
                                        "MajorPurchase"
                                    ],
                                    "type": "string"
                                },
                                "visited": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "moduleName"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "status": {
                        "enum": [
                            "New",
                            "InProgress",
                            "ClientSubmitted",
                            "AdvisorAccepted"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "factFinderUserId"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderModuleModel": {
                "properties": {
                    "available": {
                        "type": "boolean"
                    },
                    "moduleName": {
                        "enum": [
                            "Demographics",
                            "Assets",
                            "Liabilities",
                            "Incomes",
                            "Expenses",
                            "Insurance",
                            "Retirement",
                            "Education",
                            "MajorPurchase"
                        ],
                        "type": "string"
                    },
                    "visited": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "moduleName"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderModuleWithIdModel": {
                "properties": {
                    "available": {
                        "type": "boolean"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "moduleId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "moduleName": {
                        "enum": [
                            "Demographics",
                            "Assets",
                            "Liabilities",
                            "Incomes",
                            "Expenses",
                            "Insurance",
                            "Retirement",
                            "Education",
                            "MajorPurchase"
                        ],
                        "type": "string"
                    },
                    "visited": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderModulesModel": {
                "properties": {
                    "factFinderModules": {
                        "items": {
                            "properties": {
                                "available": {
                                    "type": "boolean"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "moduleId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "moduleName": {
                                    "enum": [
                                        "Demographics",
                                        "Assets",
                                        "Liabilities",
                                        "Incomes",
                                        "Expenses",
                                        "Insurance",
                                        "Retirement",
                                        "Education",
                                        "MajorPurchase"
                                    ],
                                    "type": "string"
                                },
                                "visited": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderSnapshotModel": {
                "properties": {
                    "accounts": {
                        "items": {
                            "properties": {
                                "accountHoldings": {
                                    "items": {
                                        "properties": {
                                            "accountHoldingId": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "accountId": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "costBasis": {
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "cusip": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "heldAway": {
                                                "type": "boolean"
                                            },
                                            "marketValue": {
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "symbol": {
                                                "type": "string"
                                            },
                                            "valuationDate": {
                                                "format": "date-time",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "accountId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "accountType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "externalSourceId": {
                                    "type": "string"
                                },
                                "externalSourceName": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "lastUpdated": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "marketValue": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "owner": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint",
                                        "FamilyMember",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "ownerDependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "criticalIllnessInsurancePolicies": {
                        "items": {
                            "properties": {
                                "benefit": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "criticalIllnessInsurancePolicyId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insured": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "type": "string"
                                },
                                "policyType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "premium": {
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "definedBenefitPensions": {
                        "items": {
                            "properties": {
                                "definedBenefitPensionId": {
                                    "format": "int32",
                                    "readOnly": true,
                                    "type": "integer"
                                },
                                "description": {
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "estimatedAmount": {
                                    "format": "double",
                                    "readOnly": true,
                                    "type": "number"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "readOnly": true,
                                    "type": "integer"
                                },
                                "member": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "startDate": {
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "demographics": {
                        "properties": {
                            "city": {
                                "type": "string"
                            },
                            "created": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "demographicsId": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "dependents": {
                                "items": {
                                    "properties": {
                                        "birthDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "demographicsId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "dependentOf": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "relationship": {
                                            "enum": [
                                                "Son",
                                                "Daughter",
                                                "FosterSon",
                                                "FosterDaughter",
                                                "Grandson",
                                                "Granddaughter",
                                                "Nephew",
                                                "Niece",
                                                "MaleCousin",
                                                "FemaleCousin",
                                                "Father",
                                                "Mother",
                                                "Grandfather",
                                                "Grandmother",
                                                "Uncle",
                                                "Aunt",
                                                "Brother",
                                                "Sister",
                                                "SonInLaw",
                                                "DaughterInLaw",
                                                "MaleOther",
                                                "FemaleOther"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "externalDestinationId": {
                                "type": "string"
                            },
                            "externalSourceId": {
                                "type": "string"
                            },
                            "factFinderId": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "head1": {
                                "properties": {
                                    "alreadyRetired": {
                                        "type": "boolean"
                                    },
                                    "birthDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "type": "string"
                                    },
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "enum": [
                                            "Male",
                                            "Female"
                                        ],
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "taxFilingStatus": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "head2": {
                                "properties": {
                                    "alreadyRetired": {
                                        "type": "boolean"
                                    },
                                    "birthDate": {
                                        "format": "date-time",
                                        "type": "string"
                                    },
                                    "externalDestinationId": {
                                        "type": "string"
                                    },
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "enum": [
                                            "Male",
                                            "Female"
                                        ],
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "taxFilingStatus": {
                                        "format": "int32",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            },
                            "jointAnalysis": {
                                "type": "boolean"
                            },
                            "lockRetirement": {
                                "type": "boolean"
                            },
                            "state": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "disabilityInsurancePolicies": {
                        "items": {
                            "properties": {
                                "benefit": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "benefitFrequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "disabilityInsurancePolicyId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insured": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "type": "string"
                                },
                                "policyType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "premium": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "premiumFrequency": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "educationGoals": {
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "educationExpenses": {
                                    "items": {
                                        "properties": {
                                            "annualCost": {
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "educationExpenseId": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "educationGoalId": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "externalDestinationId": {
                                                "type": "string"
                                            },
                                            "member": {
                                                "enum": [
                                                    "Head1",
                                                    "Head2",
                                                    "Dependent"
                                                ],
                                                "type": "string"
                                            },
                                            "memberDependentId": {
                                                "format": "int32",
                                                "type": "integer"
                                            },
                                            "startYear": {
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "years": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "educationGoalId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "projectedCost": {
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "expenses": {
                        "items": {
                            "properties": {
                                "annualPeriod": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "endDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "expenseAmount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "expenseId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "expenseTypeId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "startDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "incomes": {
                        "items": {
                            "properties": {
                                "annualAmount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "endDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "incomeId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "incomeTypeId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "owner": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "type": "string"
                                },
                                "startDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "liabilities": {
                        "items": {
                            "properties": {
                                "balance": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "balanceAsOfDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "externalSourceId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "importSource": {
                                    "type": "string"
                                },
                                "interestRate": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "lastUpdated": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "liabilityId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "liabilityType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "loanDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "originalPrincipal": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "owner": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "payment": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "paymentType": {
                                    "enum": [
                                        "InterestOnly",
                                        "PrincipalAndInterest",
                                        "SetPrincipal",
                                        "LastPeriod"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "lifeInsurancePolicies": {
                        "items": {
                            "properties": {
                                "beneficiary": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Dependent",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "beneficiaryDependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "benefit": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insured": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "FirstToDie",
                                        "SecondToDie",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "lifeInsurancePolicyId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "payer": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Joint",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "policyType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "premium": {
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "lifestyleAssets": {
                        "items": {
                            "properties": {
                                "description": {
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "readOnly": true,
                                    "type": "integer"
                                },
                                "lifestyleAssetId": {
                                    "format": "int32",
                                    "readOnly": true,
                                    "type": "integer"
                                },
                                "marketValue": {
                                    "format": "double",
                                    "readOnly": true,
                                    "type": "number"
                                },
                                "owner": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Joint"
                                    ],
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "purchaseAmount": {
                                    "format": "double",
                                    "readOnly": true,
                                    "type": "number"
                                },
                                "purchaseDate": {
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "type": {
                                    "format": "int32",
                                    "readOnly": true,
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "longTermCareInsurancePolicies": {
                        "items": {
                            "properties": {
                                "benefit": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "benefitFrequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insured": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "type": "string"
                                },
                                "longTermCareInsurancePolicyId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "premium": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "premiumFrequency": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "majorPurchaseGoals": {
                        "items": {
                            "properties": {
                                "amount": {
                                    "format": "double",
                                    "readOnly": true,
                                    "type": "number"
                                },
                                "description": {
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "readOnly": true,
                                    "type": "integer"
                                },
                                "majorPurchaseGoalId": {
                                    "format": "int32",
                                    "readOnly": true,
                                    "type": "integer"
                                },
                                "majorPurchaseGoalTypeId": {
                                    "format": "int32",
                                    "readOnly": true,
                                    "type": "integer"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint"
                                    ],
                                    "readOnly": true,
                                    "type": "string"
                                },
                                "targetDate": {
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "planYear": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "realEstateAssets": {
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "marketValue": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "owner": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "purchaseAmount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "purchaseDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "realEstateAssetId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "rentalIncome": {
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "retirementGoal": {
                        "properties": {
                            "externalDestinationId": {
                                "type": "string"
                            },
                            "factFinderId": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "head1RetirementDate": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "head2RetirementDate": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "retirementExpenses": {
                                "items": {
                                    "properties": {
                                        "amount": {
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "annualPeriod": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "endDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "externalDestinationId": {
                                            "type": "string"
                                        },
                                        "frequency": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "member": {
                                            "enum": [
                                                "Head1",
                                                "Head2",
                                                "Joint"
                                            ],
                                            "type": "string"
                                        },
                                        "retirementExpenseId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "retirementGoalId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "startDate": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "retirementGoalId": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderUserModel": {
                "properties": {
                    "userGuid": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "required": [
                    "userName",
                    "userGuid"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderUserWithIdModel": {
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "factFinderUserId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "userGuid": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderWithExternalIdModel": {
                "properties": {
                    "countryCode": {
                        "enum": [
                            "UnitedStates",
                            "Canada"
                        ],
                        "type": "string"
                    },
                    "externalDemographicsSourceId": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "externalSystem": {
                        "enum": [
                            "Naviplan"
                        ],
                        "type": "string"
                    },
                    "factFinderUserId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "modules": {
                        "items": {
                            "properties": {
                                "available": {
                                    "type": "boolean"
                                },
                                "moduleName": {
                                    "enum": [
                                        "Demographics",
                                        "Assets",
                                        "Liabilities",
                                        "Incomes",
                                        "Expenses",
                                        "Insurance",
                                        "Retirement",
                                        "Education",
                                        "MajorPurchase"
                                    ],
                                    "type": "string"
                                },
                                "visited": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "moduleName"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "status": {
                        "enum": [
                            "New",
                            "InProgress",
                            "ClientSubmitted",
                            "AdvisorAccepted"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "factFinderUserId"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderWithIdModel": {
                "properties": {
                    "countryCode": {
                        "enum": [
                            "UnitedStates",
                            "Canada"
                        ],
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "externalSystem": {
                        "enum": [
                            "Naviplan"
                        ],
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "factFinderUserId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastStatusUpdate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "modules": {
                        "properties": {
                            "factFinderModules": {
                                "items": {
                                    "properties": {
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "moduleId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "moduleName": {
                                            "enum": [
                                                "Demographics",
                                                "Assets",
                                                "Liabilities",
                                                "Incomes",
                                                "Expenses",
                                                "Insurance",
                                                "Retirement",
                                                "Education",
                                                "MajorPurchase"
                                            ],
                                            "type": "string"
                                        },
                                        "visited": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "status": {
                        "enum": [
                            "New",
                            "InProgress",
                            "ClientSubmitted",
                            "AdvisorAccepted"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderWithUserGuidModel": {
                "properties": {
                    "countryCode": {
                        "enum": [
                            "UnitedStates",
                            "Canada"
                        ],
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "externalSystem": {
                        "enum": [
                            "Naviplan"
                        ],
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "factFinderUserId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastStatusUpdate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "modules": {
                        "properties": {
                            "factFinderModules": {
                                "items": {
                                    "properties": {
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "moduleId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "moduleName": {
                                            "enum": [
                                                "Demographics",
                                                "Assets",
                                                "Liabilities",
                                                "Incomes",
                                                "Expenses",
                                                "Insurance",
                                                "Retirement",
                                                "Education",
                                                "MajorPurchase"
                                            ],
                                            "type": "string"
                                        },
                                        "visited": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "status": {
                        "enum": [
                            "New",
                            "InProgress",
                            "ClientSubmitted",
                            "AdvisorAccepted"
                        ],
                        "type": "string"
                    },
                    "userGuid": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderWithUserGuidsModel": {
                "properties": {
                    "factFinderWithUserGuids": {
                        "items": {
                            "properties": {
                                "countryCode": {
                                    "enum": [
                                        "UnitedStates",
                                        "Canada"
                                    ],
                                    "type": "string"
                                },
                                "created": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "externalId": {
                                    "type": "string"
                                },
                                "externalSystem": {
                                    "enum": [
                                        "Naviplan"
                                    ],
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "factFinderUserId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "lastStatusUpdate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "modules": {
                                    "properties": {
                                        "factFinderModules": {
                                            "items": {
                                                "properties": {
                                                    "available": {
                                                        "type": "boolean"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "moduleId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "moduleName": {
                                                        "enum": [
                                                            "Demographics",
                                                            "Assets",
                                                            "Liabilities",
                                                            "Incomes",
                                                            "Expenses",
                                                            "Insurance",
                                                            "Retirement",
                                                            "Education",
                                                            "MajorPurchase"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "visited": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "status": {
                                    "enum": [
                                        "New",
                                        "InProgress",
                                        "ClientSubmitted",
                                        "AdvisorAccepted"
                                    ],
                                    "type": "string"
                                },
                                "userGuid": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFinderWithUserNameModel": {
                "properties": {
                    "countryCode": {
                        "enum": [
                            "UnitedStates",
                            "Canada"
                        ],
                        "type": "string"
                    },
                    "created": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "externalSystem": {
                        "enum": [
                            "Naviplan"
                        ],
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "factFinderUserId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lastStatusUpdate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "modules": {
                        "properties": {
                            "factFinderModules": {
                                "items": {
                                    "properties": {
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "factFinderId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "links": {
                                            "items": {
                                                "properties": {
                                                    "href": {
                                                        "type": "string"
                                                    },
                                                    "rel": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "moduleId": {
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "moduleName": {
                                            "enum": [
                                                "Demographics",
                                                "Assets",
                                                "Liabilities",
                                                "Incomes",
                                                "Expenses",
                                                "Insurance",
                                                "Retirement",
                                                "Education",
                                                "MajorPurchase"
                                            ],
                                            "type": "string"
                                        },
                                        "visited": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "status": {
                        "enum": [
                            "New",
                            "InProgress",
                            "ClientSubmitted",
                            "AdvisorAccepted"
                        ],
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FactFindersWithUserNamesModel": {
                "properties": {
                    "factFinderWithUserNames": {
                        "items": {
                            "properties": {
                                "countryCode": {
                                    "enum": [
                                        "UnitedStates",
                                        "Canada"
                                    ],
                                    "type": "string"
                                },
                                "created": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "externalId": {
                                    "type": "string"
                                },
                                "externalSystem": {
                                    "enum": [
                                        "Naviplan"
                                    ],
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "factFinderUserId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "lastStatusUpdate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "modules": {
                                    "properties": {
                                        "factFinderModules": {
                                            "items": {
                                                "properties": {
                                                    "available": {
                                                        "type": "boolean"
                                                    },
                                                    "factFinderId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "links": {
                                                        "items": {
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "moduleId": {
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "moduleName": {
                                                        "enum": [
                                                            "Demographics",
                                                            "Assets",
                                                            "Liabilities",
                                                            "Incomes",
                                                            "Expenses",
                                                            "Insurance",
                                                            "Retirement",
                                                            "Education",
                                                            "MajorPurchase"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "visited": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                },
                                "status": {
                                    "enum": [
                                        "New",
                                        "InProgress",
                                        "ClientSubmitted",
                                        "AdvisorAccepted"
                                    ],
                                    "type": "string"
                                },
                                "userName": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FamilyHeadModel": {
                "properties": {
                    "alreadyRetired": {
                        "type": "boolean"
                    },
                    "birthDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "firstName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "gender": {
                        "enum": [
                            "Male",
                            "Female"
                        ],
                        "type": "string"
                    },
                    "lastName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "taxFilingStatus": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "firstName",
                    "lastName",
                    "birthDate",
                    "gender",
                    "taxFilingStatus",
                    "alreadyRetired"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FilingStatusTypeModel": {
                "properties": {
                    "filingStatusTypeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "filingStatusTypeName": {
                        "type": "string"
                    },
                    "hasJointDependent": {
                        "type": "boolean"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "partnerStatuses": {
                        "items": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "type": "array"
                    },
                    "validForSingleAnalysis": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FilingStatusTypesModel": {
                "properties": {
                    "filingStatusTypes": {
                        "items": {
                            "properties": {
                                "filingStatusTypeId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "filingStatusTypeName": {
                                    "type": "string"
                                },
                                "hasJointDependent": {
                                    "type": "boolean"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "partnerStatuses": {
                                    "items": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "type": "array"
                                },
                                "validForSingleAnalysis": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FrequencyTypeModel": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.FrequencyTypesModel": {
                "properties": {
                    "frequencyTypes": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.IncomeModel": {
                "properties": {
                    "annualAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "incomeTypeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.IncomeTypeModel": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.IncomeTypesModel": {
                "properties": {
                    "incomeTypes": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.IncomeWithIdModel": {
                "properties": {
                    "annualAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "incomeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "incomeTypeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.IncomesModel": {
                "properties": {
                    "incomes": {
                        "items": {
                            "properties": {
                                "annualAmount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "endDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "incomeId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "incomeTypeId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "owner": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "type": "string"
                                },
                                "startDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LiabilitiesModel": {
                "properties": {
                    "liabilities": {
                        "items": {
                            "properties": {
                                "balance": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "balanceAsOfDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "externalSourceId": {
                                    "type": "string"
                                },
                                "externalSourceName": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "interestRate": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "lastUpdated": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "liabilityId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "liabilityType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "loanDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "originalPrincipal": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "owner": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "payment": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "paymentType": {
                                    "enum": [
                                        "InterestOnly",
                                        "PrincipalAndInterest",
                                        "SetPrincipal",
                                        "LastPeriod"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LiabilityModel": {
                "properties": {
                    "balance": {
                        "format": "double",
                        "type": "number"
                    },
                    "balanceAsOfDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalSourceId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalSourceName": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "interestRate": {
                        "format": "double",
                        "maximum": 50,
                        "minimum": 0,
                        "type": "number"
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "liabilityType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "loanDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "originalPrincipal": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "payment": {
                        "format": "double",
                        "type": "number"
                    },
                    "paymentType": {
                        "enum": [
                            "InterestOnly",
                            "PrincipalAndInterest",
                            "SetPrincipal",
                            "LastPeriod"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LiabilityTypeModel": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LiabilityTypesModel": {
                "properties": {
                    "liabilityTypes": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LiabilityWithIdModel": {
                "properties": {
                    "balance": {
                        "format": "double",
                        "type": "number"
                    },
                    "balanceAsOfDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "externalSourceId": {
                        "type": "string"
                    },
                    "externalSourceName": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "interestRate": {
                        "format": "double",
                        "type": "number"
                    },
                    "lastUpdated": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "liabilityId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "liabilityType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "loanDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "originalPrincipal": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "payment": {
                        "format": "double",
                        "type": "number"
                    },
                    "paymentType": {
                        "enum": [
                            "InterestOnly",
                            "PrincipalAndInterest",
                            "SetPrincipal",
                            "LastPeriod"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifeInsurancePoliciesModel": {
                "properties": {
                    "lifeInsurancePolicies": {
                        "items": {
                            "properties": {
                                "beneficiary": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Dependent",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "beneficiaryDependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "benefit": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insurancePolicyId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insured": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "FirstToDie",
                                        "SecondToDie",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "payer": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Joint",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "policyType": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "premium": {
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifeInsurancePolicyModel": {
                "properties": {
                    "beneficiary": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Dependent",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "beneficiaryDependentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "FirstToDie",
                            "SecondToDie",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "payer": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "policyType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifeInsurancePolicyTypeModel": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifeInsurancePolicyTypesModel": {
                "properties": {
                    "insurancePolicyTypes": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifeInsurancePolicyWithIdModel": {
                "properties": {
                    "beneficiary": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Dependent",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "beneficiaryDependentId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insurancePolicyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "FirstToDie",
                            "SecondToDie",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "payer": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint",
                            "Other"
                        ],
                        "type": "string"
                    },
                    "policyType": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifestyleAssetModel": {
                "properties": {
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "purchaseAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "purchaseDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifestyleAssetTypeModel": {
                "properties": {
                    "id": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifestyleAssetTypesModel": {
                "properties": {
                    "lifestyleAssetTypes": {
                        "items": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifestyleAssetWithIdModel": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "lifestyleAssetId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "purchaseAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "purchaseDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LifestyleAssetsModel": {
                "properties": {
                    "lifestyleAssets": {
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "lifestyleAssetId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "marketValue": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "owner": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "purchaseAmount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "purchaseDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "type": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LongTermCareInsurancePoliciesModel": {
                "properties": {
                    "longTermCareInsurancePolicies": {
                        "items": {
                            "properties": {
                                "benefit": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "benefitFrequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insurancePolicyId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "insured": {
                                    "enum": [
                                        "Client",
                                        "CoClient"
                                    ],
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "premium": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "premiumFrequency": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LongTermCareInsurancePolicyModel": {
                "properties": {
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "benefitFrequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    },
                    "premiumFrequency": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.LongTermCareInsurancePolicyWithIdModel": {
                "properties": {
                    "benefit": {
                        "format": "double",
                        "type": "number"
                    },
                    "benefitFrequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insurancePolicyId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "insured": {
                        "enum": [
                            "Client",
                            "CoClient"
                        ],
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "premium": {
                        "format": "double",
                        "type": "number"
                    },
                    "premiumFrequency": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.MajorPurchaseGoalModel": {
                "properties": {
                    "amount": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "majorPurchaseGoalTypeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "targetDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.MajorPurchaseGoalTypeModel": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "majorPurchaseGoalTypeId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.MajorPurchaseGoalTypesModel": {
                "properties": {
                    "majorPurchaseGoalTypes": {
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "majorPurchaseGoalTypeId": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.MajorPurchaseGoalWithIdModel": {
                "properties": {
                    "amount": {
                        "format": "double",
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "majorPurchaseGoalId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "majorPurchaseGoalTypeId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "targetDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.MajorPurchaseGoalsModel": {
                "properties": {
                    "majorPurchaseGoals": {
                        "items": {
                            "properties": {
                                "amount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "majorPurchaseGoalId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "majorPurchaseGoalTypeId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "targetDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.RealEstateAssetModel": {
                "properties": {
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "purchaseAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "purchaseDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "rentalIncome": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "required": [
                    "factFinderId",
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.RealEstateAssetWithIdModel": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "marketValue": {
                        "format": "double",
                        "type": "number"
                    },
                    "owner": {
                        "enum": [
                            "Client",
                            "CoClient",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "purchaseAmount": {
                        "format": "double",
                        "type": "number"
                    },
                    "purchaseDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "realEstateAssetId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "rentalIncome": {
                        "format": "double",
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.RealEstateAssetsModel": {
                "properties": {
                    "realEstateAssets": {
                        "items": {
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "marketValue": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "owner": {
                                    "enum": [
                                        "Client",
                                        "CoClient",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "purchaseAmount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "purchaseDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "realEstateAssetId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "rentalIncome": {
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.RetirementExpenseModel": {
                "properties": {
                    "amount": {
                        "format": "double",
                        "type": "number"
                    },
                    "annualPeriod": {
                        "format": "int32",
                        "maximum": 99,
                        "minimum": 1,
                        "type": "integer"
                    },
                    "description": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "description"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.RetirementExpenseWithIdModel": {
                "properties": {
                    "amount": {
                        "format": "double",
                        "type": "number"
                    },
                    "annualPeriod": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "frequency": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "member": {
                        "enum": [
                            "Head1",
                            "Head2",
                            "Joint"
                        ],
                        "type": "string"
                    },
                    "retirementExpenseId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "retirementGoalId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "startDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.RetirementExpensesModel": {
                "properties": {
                    "retirementExpenses": {
                        "items": {
                            "properties": {
                                "amount": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "annualPeriod": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "endDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "frequency": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Joint"
                                    ],
                                    "type": "string"
                                },
                                "retirementExpenseId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "retirementGoalId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "startDate": {
                                    "format": "date-time",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.RetirementGoalModel": {
                "properties": {
                    "externalDestinationId": {
                        "maxLength": 64,
                        "minLength": 0,
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "head1RetirementDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "head2RetirementDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "factFinderId"
                ],
                "type": "object"
            },
            "Advicent.FactFinderService.Models.RetirementGoalWithIdModel": {
                "properties": {
                    "externalDestinationId": {
                        "type": "string"
                    },
                    "factFinderId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "head1RetirementDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "head2RetirementDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "retirementGoalId": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.RetirementGoalsModel": {
                "properties": {
                    "retirementGoals": {
                        "items": {
                            "properties": {
                                "externalDestinationId": {
                                    "type": "string"
                                },
                                "factFinderId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "head1RetirementDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "head2RetirementDate": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "retirementGoalId": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.ServiceInformationModel": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "schemaVersion": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "serviceVersion": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.StateProvinceModel": {
                "properties": {
                    "links": {
                        "items": {
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "stateProvinceId": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "stateProvinceName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Advicent.FactFinderService.Models.StatesProvincesModel": {
                "properties": {
                    "statesProvinces": {
                        "items": {
                            "properties": {
                                "links": {
                                    "items": {
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                },
                                "stateProvinceId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "stateProvinceName": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "Advicent.Web.Base.Links.ObjectLink": {
                "properties": {
                    "href": {
                        "type": "string"
                    },
                    "rel": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "System.Object": {
                "properties": {},
                "type": "object"
            }
        },
        "requestBodies": {
            "EducationGoals_PostByEducationgoalidModelModel": {
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "annualCost": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "externalDestinationId": {
                                    "maxLength": 64,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Dependent"
                                    ],
                                    "type": "string"
                                },
                                "memberDependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "startYear": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "years": {
                                    "format": "int32",
                                    "maximum": 99,
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "text/json": {
                        "schema": {
                            "properties": {
                                "annualCost": {
                                    "format": "double",
                                    "type": "number"
                                },
                                "externalDestinationId": {
                                    "maxLength": 64,
                                    "minLength": 0,
                                    "type": "string"
                                },
                                "member": {
                                    "enum": [
                                        "Head1",
                                        "Head2",
                                        "Dependent"
                                    ],
                                    "type": "string"
                                },
                                "memberDependentId": {
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "startYear": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "years": {
                                    "format": "int32",
                                    "maximum": 99,
                                    "minimum": 1,
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "description": "The Education Goal Expense to be added to the Fact Finder",
                "required": true
            }
        }
    }
}